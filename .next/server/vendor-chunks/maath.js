"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/maath";
exports.ids = ["vendor-chunks/maath"];
exports.modules = {

/***/ "(ssr)/./node_modules/maath/dist/buffer-6b4e8456.cjs.dev.js":
/*!************************************************************!*\
  !*** ./node_modules/maath/dist/buffer-6b4e8456.cjs.dev.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar objectSpread2 = __webpack_require__(/*! ./objectSpread2-32cd2c34.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/objectSpread2-32cd2c34.cjs.dev.js\");\nvar triangle_dist_maathTriangle = __webpack_require__(/*! ./triangle-33ffdfef.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/triangle-33ffdfef.cjs.dev.js\");\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\nvar misc_dist_maathMisc = __webpack_require__(/*! ./misc-fce4d494.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/misc-fce4d494.cjs.dev.js\");\nvar vector2_dist_maathVector2 = __webpack_require__(/*! ./vector2-f44fd63e.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/vector2-f44fd63e.cjs.dev.js\");\nvar vector3_dist_maathVector3 = __webpack_require__(/*! ./vector3-5e723d1a.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/vector3-5e723d1a.cjs.dev.js\");\n\nfunction swizzle(buffer) {\n  var stride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  var swizzle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"xyz\";\n  var o = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n\n  for (var _i = 0; _i < buffer.length; _i += stride) {\n    o.x = buffer[_i];\n    o.y = buffer[_i + 1];\n    o.z = buffer[_i + 2];\n\n    var _swizzle$split = swizzle.split(\"\"),\n        _swizzle$split2 = triangle_dist_maathTriangle._slicedToArray(_swizzle$split, 3),\n        x = _swizzle$split2[0],\n        y = _swizzle$split2[1],\n        z = _swizzle$split2[2]; // TODO Fix this ugly type\n\n\n    buffer[_i] = o[x];\n    buffer[_i + 1] = o[y];\n\n    if (stride === 3) {\n      buffer[_i + 2] = o[z];\n    }\n  }\n\n  return buffer;\n}\n/**\n * @param buffer A stride 2 points buffer\n * @param valueGenerator A function that returns the value of the z axis at index i\n * @returns\n */\n\nfunction addAxis(buffer, size) {\n  var valueGenerator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    return Math.random();\n  };\n  var newSize = size + 1;\n  var newBuffer = new Float32Array(buffer.length / size * newSize);\n\n  for (var _i2 = 0; _i2 < buffer.length; _i2 += size) {\n    var _j = _i2 / size * newSize;\n\n    newBuffer[_j] = buffer[_i2];\n    newBuffer[_j + 1] = buffer[_i2 + 1];\n\n    if (size === 2) {\n      newBuffer[_j + 2] = valueGenerator(_j);\n    }\n\n    if (size === 3) {\n      newBuffer[_j + 2] = buffer[_i2 + 2];\n      newBuffer[_j + 3] = valueGenerator(_j);\n    }\n  }\n\n  return newBuffer;\n}\n/**\n * Lerps bufferA and bufferB into final\n *\n * @param bufferA\n * @param bufferB\n * @param final\n * @param t\n */\n\nfunction lerp(bufferA, bufferB, _final, t) {\n  for (var _i3 = 0; _i3 < bufferA.length; _i3++) {\n    _final[_i3] = misc_dist_maathMisc.lerp(bufferA[_i3], bufferB[_i3], t);\n  }\n} // TODO add stride\n// TODO Fix types & vectors\n\n/**\n *\n * Translate all points in the passed buffer by the passed translactionVector.\n *\n * @param buffer\n * @param translationVector\n * @returns\n */\n\nfunction translate(buffer, translationVector) {\n  var stride = translationVector.length;\n\n  for (var _i4 = 0; _i4 < buffer.length; _i4 += stride) {\n    buffer[_i4] += translationVector[0];\n    buffer[_i4 + 1] += translationVector[1];\n    buffer[_i4 + 2] += translationVector[2];\n  }\n\n  return buffer;\n} // TODO add stride\n// TODO remove quaternion & vector3 dependencies\n\nfunction rotate(buffer, rotation) {\n  var defaultRotation = {\n    center: [0, 0, 0],\n    q: new THREE.Quaternion().identity()\n  };\n  var v = new THREE.Vector3();\n\n  var _defaultRotation$rota = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultRotation), rotation),\n      q = _defaultRotation$rota.q,\n      center = _defaultRotation$rota.center;\n\n  for (var _i5 = 0; _i5 < buffer.length; _i5 += 3) {\n    v.set(buffer[_i5] - center[0], buffer[_i5 + 1] - center[1], buffer[_i5 + 2] - center[2]);\n    v.applyQuaternion(q);\n    buffer[_i5] = v.x + center[0];\n    buffer[_i5 + 1] = v.y + center[1];\n    buffer[_i5 + 2] = v.z + center[1];\n  }\n\n  return buffer;\n}\nfunction map(buffer, stride, callback) {\n  for (var _i6 = 0, _j2 = 0; _i6 < buffer.length; _i6 += stride, _j2++) {\n    if (stride === 3) {\n      var res = callback([buffer[_i6], buffer[_i6 + 1], buffer[_i6 + 2]], _j2);\n      buffer.set(res, _i6);\n    } else {\n      buffer.set(callback([buffer[_i6], buffer[_i6 + 1]], _j2), _i6);\n    }\n  }\n\n  return buffer;\n}\n/**\n * Reduces passed buffer\n */\n\nfunction reduce(b, stride, callback, acc) {\n  for (var _i7 = 0, _j3 = 0; _i7 < b.length; _i7 += stride, _j3++) {\n    if (stride === 2) {\n      acc = callback(acc, [b[_i7], b[_i7 + 1]], _j3);\n    } else {\n      acc = callback(acc, [b[_i7], b[_i7 + 1], b[_i7 + 2]], _j3);\n    }\n  }\n\n  return acc;\n}\nfunction expand(b, stride, opts) {\n  var defaultExpandOptions = {\n    center: [0, 0, 0]\n  };\n\n  var _defaultExpandOptions = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultExpandOptions), opts),\n      center = _defaultExpandOptions.center,\n      distance = _defaultExpandOptions.distance;\n\n  for (var _i8 = 0; _i8 < b.length; _i8 += stride) {\n    /**\n     * 1. translate to origin (subtract the scaling center)\n     * 2. scale by the correct amount (multiply by a constant)\n     * 2. translate from origin (add the scaling center)\n     */\n    b[_i8] = (b[_i8] - center[0]) * (1 + distance) + center[0];\n    b[_i8 + 1] = (b[_i8 + 1] - center[1]) * (1 + distance) + center[1];\n\n    if (stride === 3) {\n      b[_i8 + 2] = (b[_i8 + 2] - center[1]) * (1 + distance) + center[2];\n    }\n  }\n\n  return b;\n}\nfunction center(myBuffer, stride) {\n  return reduce(myBuffer, stride, function (acc, point) {\n    if (stride === 3) {\n      // some type hacking is necessary to avoid type errors going from [n, n] => [n, n, n]\n      // but it's not an actual problem, as this path would always get a v3\n      acc = vector3_dist_maathVector3.add(acc, point);\n    } else {\n      acc = vector2_dist_maathVector2.add(acc, point);\n    }\n\n    return acc;\n  }, vector2_dist_maathVector2.zero());\n}\nfunction sort(myBuffer, stride, callback) {\n  // 1. make an array of the correct size\n  var indices = Int16Array.from({\n    length: myBuffer.length / stride\n  }, function (_, i) {\n    return i;\n  }); // 2. sort the indices array\n\n  indices.sort(function (a, b) {\n    var pa = myBuffer.slice(a * stride, a * stride + stride);\n    var pb = myBuffer.slice(b * stride, b * stride + stride);\n    return callback(pa, pb);\n  }); // 3. make a copy of the original array to fetch indices from\n\n  var prevBuffer = myBuffer.slice(0); // 4. mutate the passed array\n\n  for (var _i9 = 0; _i9 < indices.length; _i9++) {\n    var _j4 = indices[_i9];\n    myBuffer.set(prevBuffer.slice(_j4 * stride, _j4 * stride + stride), _i9 * 3);\n  }\n\n  return myBuffer;\n}\n\nvar buffer = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  swizzle: swizzle,\n  addAxis: addAxis,\n  lerp: lerp,\n  translate: translate,\n  rotate: rotate,\n  map: map,\n  reduce: reduce,\n  expand: expand,\n  center: center,\n  sort: sort\n});\n\nexports.addAxis = addAxis;\nexports.buffer = buffer;\nexports.center = center;\nexports.expand = expand;\nexports.lerp = lerp;\nexports.map = map;\nexports.reduce = reduce;\nexports.rotate = rotate;\nexports.sort = sort;\nexports.swizzle = swizzle;\nexports.translate = translate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9idWZmZXItNmI0ZTg0NTYuY2pzLmRldi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixvQkFBb0IsbUJBQU8sQ0FBQyw4R0FBcUM7QUFDakUsa0NBQWtDLG1CQUFPLENBQUMsb0dBQWdDO0FBQzFFLFlBQVksbUJBQU8sQ0FBQyx5REFBTztBQUMzQiwwQkFBMEIsbUJBQU8sQ0FBQyw0RkFBNEI7QUFDOUQsZ0NBQWdDLG1CQUFPLENBQUMsa0dBQStCO0FBQ3ZFLGdDQUFnQyxtQkFBTyxDQUFDLGtHQUErQjs7QUFFdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsb0JBQW9CO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQzs7O0FBR2hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixxQkFBcUI7QUFDekM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQTtBQUNBLEVBQUU7QUFDRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUU7QUFDRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMEZBQTBGO0FBQzFGO0FBQ0E7O0FBRUEsb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHFCQUFxQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2QkFBNkIsZ0JBQWdCO0FBQzdDO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwRkFBMEY7QUFDMUY7QUFDQTs7QUFFQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRyxHQUFHOztBQUVOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxHQUFHOztBQUVOLHNDQUFzQzs7QUFFdEMsb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELGVBQWU7QUFDZixjQUFjO0FBQ2QsY0FBYztBQUNkLGNBQWM7QUFDZCxZQUFZO0FBQ1osV0FBVztBQUNYLGNBQWM7QUFDZCxjQUFjO0FBQ2QsWUFBWTtBQUNaLGVBQWU7QUFDZixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW50Y2FyLy4vbm9kZV9tb2R1bGVzL21hYXRoL2Rpc3QvYnVmZmVyLTZiNGU4NDU2LmNqcy5kZXYuanM/NTE3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBvYmplY3RTcHJlYWQyID0gcmVxdWlyZSgnLi9vYmplY3RTcHJlYWQyLTMyY2QyYzM0LmNqcy5kZXYuanMnKTtcbnZhciB0cmlhbmdsZV9kaXN0X21hYXRoVHJpYW5nbGUgPSByZXF1aXJlKCcuL3RyaWFuZ2xlLTMzZmZkZmVmLmNqcy5kZXYuanMnKTtcbnZhciBUSFJFRSA9IHJlcXVpcmUoJ3RocmVlJyk7XG52YXIgbWlzY19kaXN0X21hYXRoTWlzYyA9IHJlcXVpcmUoJy4vbWlzYy1mY2U0ZDQ5NC5janMuZGV2LmpzJyk7XG52YXIgdmVjdG9yMl9kaXN0X21hYXRoVmVjdG9yMiA9IHJlcXVpcmUoJy4vdmVjdG9yMi1mNDRmZDYzZS5janMuZGV2LmpzJyk7XG52YXIgdmVjdG9yM19kaXN0X21hYXRoVmVjdG9yMyA9IHJlcXVpcmUoJy4vdmVjdG9yMy01ZTcyM2QxYS5janMuZGV2LmpzJyk7XG5cbmZ1bmN0aW9uIHN3aXp6bGUoYnVmZmVyKSB7XG4gIHZhciBzdHJpZGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDM7XG4gIHZhciBzd2l6emxlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBcInh5elwiO1xuICB2YXIgbyA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDAsXG4gICAgejogMFxuICB9O1xuXG4gIGZvciAodmFyIF9pID0gMDsgX2kgPCBidWZmZXIubGVuZ3RoOyBfaSArPSBzdHJpZGUpIHtcbiAgICBvLnggPSBidWZmZXJbX2ldO1xuICAgIG8ueSA9IGJ1ZmZlcltfaSArIDFdO1xuICAgIG8ueiA9IGJ1ZmZlcltfaSArIDJdO1xuXG4gICAgdmFyIF9zd2l6emxlJHNwbGl0ID0gc3dpenpsZS5zcGxpdChcIlwiKSxcbiAgICAgICAgX3N3aXp6bGUkc3BsaXQyID0gdHJpYW5nbGVfZGlzdF9tYWF0aFRyaWFuZ2xlLl9zbGljZWRUb0FycmF5KF9zd2l6emxlJHNwbGl0LCAzKSxcbiAgICAgICAgeCA9IF9zd2l6emxlJHNwbGl0MlswXSxcbiAgICAgICAgeSA9IF9zd2l6emxlJHNwbGl0MlsxXSxcbiAgICAgICAgeiA9IF9zd2l6emxlJHNwbGl0MlsyXTsgLy8gVE9ETyBGaXggdGhpcyB1Z2x5IHR5cGVcblxuXG4gICAgYnVmZmVyW19pXSA9IG9beF07XG4gICAgYnVmZmVyW19pICsgMV0gPSBvW3ldO1xuXG4gICAgaWYgKHN0cmlkZSA9PT0gMykge1xuICAgICAgYnVmZmVyW19pICsgMl0gPSBvW3pdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBidWZmZXI7XG59XG4vKipcbiAqIEBwYXJhbSBidWZmZXIgQSBzdHJpZGUgMiBwb2ludHMgYnVmZmVyXG4gKiBAcGFyYW0gdmFsdWVHZW5lcmF0b3IgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSB6IGF4aXMgYXQgaW5kZXggaVxuICogQHJldHVybnNcbiAqL1xuXG5mdW5jdGlvbiBhZGRBeGlzKGJ1ZmZlciwgc2l6ZSkge1xuICB2YXIgdmFsdWVHZW5lcmF0b3IgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKTtcbiAgfTtcbiAgdmFyIG5ld1NpemUgPSBzaXplICsgMTtcbiAgdmFyIG5ld0J1ZmZlciA9IG5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyLmxlbmd0aCAvIHNpemUgKiBuZXdTaXplKTtcblxuICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBidWZmZXIubGVuZ3RoOyBfaTIgKz0gc2l6ZSkge1xuICAgIHZhciBfaiA9IF9pMiAvIHNpemUgKiBuZXdTaXplO1xuXG4gICAgbmV3QnVmZmVyW19qXSA9IGJ1ZmZlcltfaTJdO1xuICAgIG5ld0J1ZmZlcltfaiArIDFdID0gYnVmZmVyW19pMiArIDFdO1xuXG4gICAgaWYgKHNpemUgPT09IDIpIHtcbiAgICAgIG5ld0J1ZmZlcltfaiArIDJdID0gdmFsdWVHZW5lcmF0b3IoX2opO1xuICAgIH1cblxuICAgIGlmIChzaXplID09PSAzKSB7XG4gICAgICBuZXdCdWZmZXJbX2ogKyAyXSA9IGJ1ZmZlcltfaTIgKyAyXTtcbiAgICAgIG5ld0J1ZmZlcltfaiArIDNdID0gdmFsdWVHZW5lcmF0b3IoX2opO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXdCdWZmZXI7XG59XG4vKipcbiAqIExlcnBzIGJ1ZmZlckEgYW5kIGJ1ZmZlckIgaW50byBmaW5hbFxuICpcbiAqIEBwYXJhbSBidWZmZXJBXG4gKiBAcGFyYW0gYnVmZmVyQlxuICogQHBhcmFtIGZpbmFsXG4gKiBAcGFyYW0gdFxuICovXG5cbmZ1bmN0aW9uIGxlcnAoYnVmZmVyQSwgYnVmZmVyQiwgX2ZpbmFsLCB0KSB7XG4gIGZvciAodmFyIF9pMyA9IDA7IF9pMyA8IGJ1ZmZlckEubGVuZ3RoOyBfaTMrKykge1xuICAgIF9maW5hbFtfaTNdID0gbWlzY19kaXN0X21hYXRoTWlzYy5sZXJwKGJ1ZmZlckFbX2kzXSwgYnVmZmVyQltfaTNdLCB0KTtcbiAgfVxufSAvLyBUT0RPIGFkZCBzdHJpZGVcbi8vIFRPRE8gRml4IHR5cGVzICYgdmVjdG9yc1xuXG4vKipcbiAqXG4gKiBUcmFuc2xhdGUgYWxsIHBvaW50cyBpbiB0aGUgcGFzc2VkIGJ1ZmZlciBieSB0aGUgcGFzc2VkIHRyYW5zbGFjdGlvblZlY3Rvci5cbiAqXG4gKiBAcGFyYW0gYnVmZmVyXG4gKiBAcGFyYW0gdHJhbnNsYXRpb25WZWN0b3JcbiAqIEByZXR1cm5zXG4gKi9cblxuZnVuY3Rpb24gdHJhbnNsYXRlKGJ1ZmZlciwgdHJhbnNsYXRpb25WZWN0b3IpIHtcbiAgdmFyIHN0cmlkZSA9IHRyYW5zbGF0aW9uVmVjdG9yLmxlbmd0aDtcblxuICBmb3IgKHZhciBfaTQgPSAwOyBfaTQgPCBidWZmZXIubGVuZ3RoOyBfaTQgKz0gc3RyaWRlKSB7XG4gICAgYnVmZmVyW19pNF0gKz0gdHJhbnNsYXRpb25WZWN0b3JbMF07XG4gICAgYnVmZmVyW19pNCArIDFdICs9IHRyYW5zbGF0aW9uVmVjdG9yWzFdO1xuICAgIGJ1ZmZlcltfaTQgKyAyXSArPSB0cmFuc2xhdGlvblZlY3RvclsyXTtcbiAgfVxuXG4gIHJldHVybiBidWZmZXI7XG59IC8vIFRPRE8gYWRkIHN0cmlkZVxuLy8gVE9ETyByZW1vdmUgcXVhdGVybmlvbiAmIHZlY3RvcjMgZGVwZW5kZW5jaWVzXG5cbmZ1bmN0aW9uIHJvdGF0ZShidWZmZXIsIHJvdGF0aW9uKSB7XG4gIHZhciBkZWZhdWx0Um90YXRpb24gPSB7XG4gICAgY2VudGVyOiBbMCwgMCwgMF0sXG4gICAgcTogbmV3IFRIUkVFLlF1YXRlcm5pb24oKS5pZGVudGl0eSgpXG4gIH07XG4gIHZhciB2ID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcblxuICB2YXIgX2RlZmF1bHRSb3RhdGlvbiRyb3RhID0gb2JqZWN0U3ByZWFkMi5fb2JqZWN0U3ByZWFkMihvYmplY3RTcHJlYWQyLl9vYmplY3RTcHJlYWQyKHt9LCBkZWZhdWx0Um90YXRpb24pLCByb3RhdGlvbiksXG4gICAgICBxID0gX2RlZmF1bHRSb3RhdGlvbiRyb3RhLnEsXG4gICAgICBjZW50ZXIgPSBfZGVmYXVsdFJvdGF0aW9uJHJvdGEuY2VudGVyO1xuXG4gIGZvciAodmFyIF9pNSA9IDA7IF9pNSA8IGJ1ZmZlci5sZW5ndGg7IF9pNSArPSAzKSB7XG4gICAgdi5zZXQoYnVmZmVyW19pNV0gLSBjZW50ZXJbMF0sIGJ1ZmZlcltfaTUgKyAxXSAtIGNlbnRlclsxXSwgYnVmZmVyW19pNSArIDJdIC0gY2VudGVyWzJdKTtcbiAgICB2LmFwcGx5UXVhdGVybmlvbihxKTtcbiAgICBidWZmZXJbX2k1XSA9IHYueCArIGNlbnRlclswXTtcbiAgICBidWZmZXJbX2k1ICsgMV0gPSB2LnkgKyBjZW50ZXJbMV07XG4gICAgYnVmZmVyW19pNSArIDJdID0gdi56ICsgY2VudGVyWzFdO1xuICB9XG5cbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cbmZ1bmN0aW9uIG1hcChidWZmZXIsIHN0cmlkZSwgY2FsbGJhY2spIHtcbiAgZm9yICh2YXIgX2k2ID0gMCwgX2oyID0gMDsgX2k2IDwgYnVmZmVyLmxlbmd0aDsgX2k2ICs9IHN0cmlkZSwgX2oyKyspIHtcbiAgICBpZiAoc3RyaWRlID09PSAzKSB7XG4gICAgICB2YXIgcmVzID0gY2FsbGJhY2soW2J1ZmZlcltfaTZdLCBidWZmZXJbX2k2ICsgMV0sIGJ1ZmZlcltfaTYgKyAyXV0sIF9qMik7XG4gICAgICBidWZmZXIuc2V0KHJlcywgX2k2KTtcbiAgICB9IGVsc2Uge1xuICAgICAgYnVmZmVyLnNldChjYWxsYmFjayhbYnVmZmVyW19pNl0sIGJ1ZmZlcltfaTYgKyAxXV0sIF9qMiksIF9pNik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cbi8qKlxuICogUmVkdWNlcyBwYXNzZWQgYnVmZmVyXG4gKi9cblxuZnVuY3Rpb24gcmVkdWNlKGIsIHN0cmlkZSwgY2FsbGJhY2ssIGFjYykge1xuICBmb3IgKHZhciBfaTcgPSAwLCBfajMgPSAwOyBfaTcgPCBiLmxlbmd0aDsgX2k3ICs9IHN0cmlkZSwgX2ozKyspIHtcbiAgICBpZiAoc3RyaWRlID09PSAyKSB7XG4gICAgICBhY2MgPSBjYWxsYmFjayhhY2MsIFtiW19pN10sIGJbX2k3ICsgMV1dLCBfajMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhY2MgPSBjYWxsYmFjayhhY2MsIFtiW19pN10sIGJbX2k3ICsgMV0sIGJbX2k3ICsgMl1dLCBfajMpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhY2M7XG59XG5mdW5jdGlvbiBleHBhbmQoYiwgc3RyaWRlLCBvcHRzKSB7XG4gIHZhciBkZWZhdWx0RXhwYW5kT3B0aW9ucyA9IHtcbiAgICBjZW50ZXI6IFswLCAwLCAwXVxuICB9O1xuXG4gIHZhciBfZGVmYXVsdEV4cGFuZE9wdGlvbnMgPSBvYmplY3RTcHJlYWQyLl9vYmplY3RTcHJlYWQyKG9iamVjdFNwcmVhZDIuX29iamVjdFNwcmVhZDIoe30sIGRlZmF1bHRFeHBhbmRPcHRpb25zKSwgb3B0cyksXG4gICAgICBjZW50ZXIgPSBfZGVmYXVsdEV4cGFuZE9wdGlvbnMuY2VudGVyLFxuICAgICAgZGlzdGFuY2UgPSBfZGVmYXVsdEV4cGFuZE9wdGlvbnMuZGlzdGFuY2U7XG5cbiAgZm9yICh2YXIgX2k4ID0gMDsgX2k4IDwgYi5sZW5ndGg7IF9pOCArPSBzdHJpZGUpIHtcbiAgICAvKipcbiAgICAgKiAxLiB0cmFuc2xhdGUgdG8gb3JpZ2luIChzdWJ0cmFjdCB0aGUgc2NhbGluZyBjZW50ZXIpXG4gICAgICogMi4gc2NhbGUgYnkgdGhlIGNvcnJlY3QgYW1vdW50IChtdWx0aXBseSBieSBhIGNvbnN0YW50KVxuICAgICAqIDIuIHRyYW5zbGF0ZSBmcm9tIG9yaWdpbiAoYWRkIHRoZSBzY2FsaW5nIGNlbnRlcilcbiAgICAgKi9cbiAgICBiW19pOF0gPSAoYltfaThdIC0gY2VudGVyWzBdKSAqICgxICsgZGlzdGFuY2UpICsgY2VudGVyWzBdO1xuICAgIGJbX2k4ICsgMV0gPSAoYltfaTggKyAxXSAtIGNlbnRlclsxXSkgKiAoMSArIGRpc3RhbmNlKSArIGNlbnRlclsxXTtcblxuICAgIGlmIChzdHJpZGUgPT09IDMpIHtcbiAgICAgIGJbX2k4ICsgMl0gPSAoYltfaTggKyAyXSAtIGNlbnRlclsxXSkgKiAoMSArIGRpc3RhbmNlKSArIGNlbnRlclsyXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYjtcbn1cbmZ1bmN0aW9uIGNlbnRlcihteUJ1ZmZlciwgc3RyaWRlKSB7XG4gIHJldHVybiByZWR1Y2UobXlCdWZmZXIsIHN0cmlkZSwgZnVuY3Rpb24gKGFjYywgcG9pbnQpIHtcbiAgICBpZiAoc3RyaWRlID09PSAzKSB7XG4gICAgICAvLyBzb21lIHR5cGUgaGFja2luZyBpcyBuZWNlc3NhcnkgdG8gYXZvaWQgdHlwZSBlcnJvcnMgZ29pbmcgZnJvbSBbbiwgbl0gPT4gW24sIG4sIG5dXG4gICAgICAvLyBidXQgaXQncyBub3QgYW4gYWN0dWFsIHByb2JsZW0sIGFzIHRoaXMgcGF0aCB3b3VsZCBhbHdheXMgZ2V0IGEgdjNcbiAgICAgIGFjYyA9IHZlY3RvcjNfZGlzdF9tYWF0aFZlY3RvcjMuYWRkKGFjYywgcG9pbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhY2MgPSB2ZWN0b3IyX2Rpc3RfbWFhdGhWZWN0b3IyLmFkZChhY2MsIHBvaW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWNjO1xuICB9LCB2ZWN0b3IyX2Rpc3RfbWFhdGhWZWN0b3IyLnplcm8oKSk7XG59XG5mdW5jdGlvbiBzb3J0KG15QnVmZmVyLCBzdHJpZGUsIGNhbGxiYWNrKSB7XG4gIC8vIDEuIG1ha2UgYW4gYXJyYXkgb2YgdGhlIGNvcnJlY3Qgc2l6ZVxuICB2YXIgaW5kaWNlcyA9IEludDE2QXJyYXkuZnJvbSh7XG4gICAgbGVuZ3RoOiBteUJ1ZmZlci5sZW5ndGggLyBzdHJpZGVcbiAgfSwgZnVuY3Rpb24gKF8sIGkpIHtcbiAgICByZXR1cm4gaTtcbiAgfSk7IC8vIDIuIHNvcnQgdGhlIGluZGljZXMgYXJyYXlcblxuICBpbmRpY2VzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICB2YXIgcGEgPSBteUJ1ZmZlci5zbGljZShhICogc3RyaWRlLCBhICogc3RyaWRlICsgc3RyaWRlKTtcbiAgICB2YXIgcGIgPSBteUJ1ZmZlci5zbGljZShiICogc3RyaWRlLCBiICogc3RyaWRlICsgc3RyaWRlKTtcbiAgICByZXR1cm4gY2FsbGJhY2socGEsIHBiKTtcbiAgfSk7IC8vIDMuIG1ha2UgYSBjb3B5IG9mIHRoZSBvcmlnaW5hbCBhcnJheSB0byBmZXRjaCBpbmRpY2VzIGZyb21cblxuICB2YXIgcHJldkJ1ZmZlciA9IG15QnVmZmVyLnNsaWNlKDApOyAvLyA0LiBtdXRhdGUgdGhlIHBhc3NlZCBhcnJheVxuXG4gIGZvciAodmFyIF9pOSA9IDA7IF9pOSA8IGluZGljZXMubGVuZ3RoOyBfaTkrKykge1xuICAgIHZhciBfajQgPSBpbmRpY2VzW19pOV07XG4gICAgbXlCdWZmZXIuc2V0KHByZXZCdWZmZXIuc2xpY2UoX2o0ICogc3RyaWRlLCBfajQgKiBzdHJpZGUgKyBzdHJpZGUpLCBfaTkgKiAzKTtcbiAgfVxuXG4gIHJldHVybiBteUJ1ZmZlcjtcbn1cblxudmFyIGJ1ZmZlciA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBzd2l6emxlOiBzd2l6emxlLFxuICBhZGRBeGlzOiBhZGRBeGlzLFxuICBsZXJwOiBsZXJwLFxuICB0cmFuc2xhdGU6IHRyYW5zbGF0ZSxcbiAgcm90YXRlOiByb3RhdGUsXG4gIG1hcDogbWFwLFxuICByZWR1Y2U6IHJlZHVjZSxcbiAgZXhwYW5kOiBleHBhbmQsXG4gIGNlbnRlcjogY2VudGVyLFxuICBzb3J0OiBzb3J0XG59KTtcblxuZXhwb3J0cy5hZGRBeGlzID0gYWRkQXhpcztcbmV4cG9ydHMuYnVmZmVyID0gYnVmZmVyO1xuZXhwb3J0cy5jZW50ZXIgPSBjZW50ZXI7XG5leHBvcnRzLmV4cGFuZCA9IGV4cGFuZDtcbmV4cG9ydHMubGVycCA9IGxlcnA7XG5leHBvcnRzLm1hcCA9IG1hcDtcbmV4cG9ydHMucmVkdWNlID0gcmVkdWNlO1xuZXhwb3J0cy5yb3RhdGUgPSByb3RhdGU7XG5leHBvcnRzLnNvcnQgPSBzb3J0O1xuZXhwb3J0cy5zd2l6emxlID0gc3dpenpsZTtcbmV4cG9ydHMudHJhbnNsYXRlID0gdHJhbnNsYXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/buffer-6b4e8456.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/classCallCheck-eaf0efc7.cjs.dev.js":
/*!********************************************************************!*\
  !*** ./node_modules/maath/dist/classCallCheck-eaf0efc7.cjs.dev.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nexports._classCallCheck = _classCallCheck;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9jbGFzc0NhbGxDaGVjay1lYWYwZWZjNy5janMuZGV2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVudGNhci8uL25vZGVfbW9kdWxlcy9tYWF0aC9kaXN0L2NsYXNzQ2FsbENoZWNrLWVhZjBlZmM3LmNqcy5kZXYuanM/NjExYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59XG5cbmV4cG9ydHMuX2NsYXNzQ2FsbENoZWNrID0gX2NsYXNzQ2FsbENoZWNrO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/classCallCheck-eaf0efc7.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/easing-5c3709fe.cjs.dev.js":
/*!************************************************************!*\
  !*** ./node_modules/maath/dist/easing-5c3709fe.cjs.dev.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar triangle_dist_maathTriangle = __webpack_require__(/*! ./triangle-33ffdfef.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/triangle-33ffdfef.cjs.dev.js\");\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\nvar misc_dist_maathMisc = __webpack_require__(/*! ./misc-fce4d494.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/misc-fce4d494.cjs.dev.js\");\n\nvar rsqw = function rsqw(t) {\n  var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.01;\n  var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var f = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1 / (2 * Math.PI);\n  return a / Math.atan(1 / delta) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta);\n};\nvar exp = function exp(t) {\n  return 1 / (1 + t + 0.48 * t * t + 0.235 * t * t * t);\n};\nvar linear = function linear(t) {\n  return t;\n};\nvar sine = {\n  \"in\": function _in(x) {\n    return 1 - Math.cos(x * Math.PI / 2);\n  },\n  out: function out(x) {\n    return Math.sin(x * Math.PI / 2);\n  },\n  inOut: function inOut(x) {\n    return -(Math.cos(Math.PI * x) - 1) / 2;\n  }\n};\nvar cubic = {\n  \"in\": function _in(x) {\n    return x * x * x;\n  },\n  out: function out(x) {\n    return 1 - Math.pow(1 - x, 3);\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n  }\n};\nvar quint = {\n  \"in\": function _in(x) {\n    return x * x * x * x * x;\n  },\n  out: function out(x) {\n    return 1 - Math.pow(1 - x, 5);\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2;\n  }\n};\nvar circ = {\n  \"in\": function _in(x) {\n    return 1 - Math.sqrt(1 - Math.pow(x, 2));\n  },\n  out: function out(x) {\n    return Math.sqrt(1 - Math.pow(x - 1, 2));\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n  }\n};\nvar quart = {\n  \"in\": function _in(t) {\n    return t * t * t * t;\n  },\n  out: function out(t) {\n    return 1 - --t * t * t * t;\n  },\n  inOut: function inOut(t) {\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n  }\n};\nvar expo = {\n  \"in\": function _in(x) {\n    return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n  },\n  out: function out(x) {\n    return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n  },\n  inOut: function inOut(x) {\n    return x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2;\n  }\n};\n/**\n * Damp, based on Game Programming Gems 4 Chapter 1.10\n *   Return value indicates whether the animation is still running.\n */\n\nfunction damp(\n/** The object */\ncurrent,\n/** The key to animate */\nprop,\n/** To goal value */\ntarget) {\n  var smoothTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.25;\n  var delta = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.01;\n  var maxSpeed = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Infinity;\n  var easing = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : exp;\n  var eps = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0.001;\n  var vel = \"velocity_\" + prop;\n  if (current.__damp === undefined) current.__damp = {};\n  if (current.__damp[vel] === undefined) current.__damp[vel] = 0;\n\n  if (Math.abs(current[prop] - target) <= eps) {\n    current[prop] = target;\n    return false;\n  }\n\n  smoothTime = Math.max(0.0001, smoothTime);\n  var omega = 2 / smoothTime;\n  var t = easing(omega * delta);\n  var change = current[prop] - target;\n  var originalTo = target; // Clamp maximum maxSpeed\n\n  var maxChange = maxSpeed * smoothTime;\n  change = Math.min(Math.max(change, -maxChange), maxChange);\n  target = current[prop] - change;\n  var temp = (current.__damp[vel] + omega * change) * delta;\n  current.__damp[vel] = (current.__damp[vel] - omega * temp) * t;\n  var output = target + (change + temp) * t; // Prevent overshooting\n\n  if (originalTo - current[prop] > 0.0 === output > originalTo) {\n    output = originalTo;\n    current.__damp[vel] = (output - originalTo) / delta;\n  }\n\n  current[prop] = output;\n  return true;\n}\n/**\n * DampLookAt\n */\n\nvar isCamera = function isCamera(v) {\n  return v && v.isCamera;\n};\n\nvar isLight = function isLight(v) {\n  return v && v.isLight;\n};\n\nvar vl3d = /*@__PURE__*/new THREE.Vector3();\n\nvar _q1 = /*@__PURE__*/new THREE.Quaternion();\n\nvar _q2 = /*@__PURE__*/new THREE.Quaternion();\n\nvar _m1 = /*@__PURE__*/new THREE.Matrix4();\n\nvar _position = /*@__PURE__*/new THREE.Vector3();\n\nfunction dampLookAt(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  // This method does not support objects having non-uniformly-scaled parent(s)\n  if (typeof target === \"number\") vl3d.setScalar(target);else if (Array.isArray(target)) vl3d.set(target[0], target[1], target[2]);else vl3d.copy(target);\n  var parent = current.parent;\n  current.updateWorldMatrix(true, false);\n\n  _position.setFromMatrixPosition(current.matrixWorld);\n\n  if (isCamera(current) || isLight(current)) _m1.lookAt(_position, vl3d, current.up);else _m1.lookAt(vl3d, _position, current.up);\n  dampQ(current.quaternion, _q2.setFromRotationMatrix(_m1), smoothTime, delta, maxSpeed, easing, eps);\n\n  if (parent) {\n    _m1.extractRotation(parent.matrixWorld);\n\n    _q1.setFromRotationMatrix(_m1);\n\n    dampQ(current.quaternion, _q2.copy(current.quaternion).premultiply(_q1.invert()), smoothTime, delta, maxSpeed, easing, eps);\n  }\n}\n/**\n * DampAngle, with a shortest-path\n */\n\nfunction dampAngle(current, prop, target, smoothTime, delta, maxSpeed, easing, eps) {\n  return damp(current, prop, current[prop] + misc_dist_maathMisc.deltaAngle(current[prop], target), smoothTime, delta, maxSpeed, easing, eps);\n}\n/**\n * Vector2D Damp\n */\n\nvar v2d = /*@__PURE__*/new THREE.Vector2();\nvar a2, b2;\nfunction damp2(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v2d.setScalar(target);else if (Array.isArray(target)) v2d.set(target[0], target[1]);else v2d.copy(target);\n  a2 = damp(current, \"x\", v2d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b2 = damp(current, \"y\", v2d.y, smoothTime, delta, maxSpeed, easing, eps);\n  return a2 || b2;\n}\n/**\n * Vector3D Damp\n */\n\nvar v3d = /*@__PURE__*/new THREE.Vector3();\nvar a3, b3, c3;\nfunction damp3(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v3d.setScalar(target);else if (Array.isArray(target)) v3d.set(target[0], target[1], target[2]);else v3d.copy(target);\n  a3 = damp(current, \"x\", v3d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b3 = damp(current, \"y\", v3d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c3 = damp(current, \"z\", v3d.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a3 || b3 || c3;\n}\n/**\n * Vector4D Damp\n */\n\nvar v4d = /*@__PURE__*/new THREE.Vector4();\nvar a4, b4, c4, d4;\nfunction damp4(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v4d.setScalar(target);else if (Array.isArray(target)) v4d.set(target[0], target[1], target[2], target[3]);else v4d.copy(target);\n  a4 = damp(current, \"x\", v4d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b4 = damp(current, \"y\", v4d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c4 = damp(current, \"z\", v4d.z, smoothTime, delta, maxSpeed, easing, eps);\n  d4 = damp(current, \"w\", v4d.w, smoothTime, delta, maxSpeed, easing, eps);\n  return a4 || b4 || c4 || d4;\n}\n/**\n * Euler Damp\n */\n\nvar rot = /*@__PURE__*/new THREE.Euler();\nvar aE, bE, cE;\nfunction dampE(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) rot.set(target[0], target[1], target[2], target[3]);else rot.copy(target);\n  aE = dampAngle(current, \"x\", rot.x, smoothTime, delta, maxSpeed, easing, eps);\n  bE = dampAngle(current, \"y\", rot.y, smoothTime, delta, maxSpeed, easing, eps);\n  cE = dampAngle(current, \"z\", rot.z, smoothTime, delta, maxSpeed, easing, eps);\n  return aE || bE || cE;\n}\n/**\n * Color Damp\n */\n\nvar col = /*@__PURE__*/new THREE.Color();\nvar aC, bC, cC;\nfunction dampC(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (target instanceof THREE.Color) col.copy(target);else if (Array.isArray(target)) col.setRGB(target[0], target[1], target[2]);else col.set(target);\n  aC = damp(current, \"r\", col.r, smoothTime, delta, maxSpeed, easing, eps);\n  bC = damp(current, \"g\", col.g, smoothTime, delta, maxSpeed, easing, eps);\n  cC = damp(current, \"b\", col.b, smoothTime, delta, maxSpeed, easing, eps);\n  return aC || bC || cC;\n}\n/**\n * Quaternion Damp\n * https://gist.github.com/maxattack/4c7b4de00f5c1b95a33b\n * Copyright 2016 Max Kaufmann (max.kaufmann@gmail.com)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nvar qt = /*@__PURE__*/new THREE.Quaternion();\nvar v4result = /*@__PURE__*/new THREE.Vector4();\nvar v4velocity = /*@__PURE__*/new THREE.Vector4();\nvar v4error = /*@__PURE__*/new THREE.Vector4();\nvar aQ, bQ, cQ, dQ;\nfunction dampQ(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n  if (Array.isArray(target)) qt.set(target[0], target[1], target[2], target[3]);else qt.copy(target);\n  var multi = current.dot(qt) > 0 ? 1 : -1;\n  qt.x *= multi;\n  qt.y *= multi;\n  qt.z *= multi;\n  qt.w *= multi;\n  aQ = damp(current, \"x\", qt.x, smoothTime, delta, maxSpeed, easing, eps);\n  bQ = damp(current, \"y\", qt.y, smoothTime, delta, maxSpeed, easing, eps);\n  cQ = damp(current, \"z\", qt.z, smoothTime, delta, maxSpeed, easing, eps);\n  dQ = damp(current, \"w\", qt.w, smoothTime, delta, maxSpeed, easing, eps); // smooth damp (nlerp approx)\n\n  v4result.set(current.x, current.y, current.z, current.w).normalize();\n  v4velocity.set(cur.__damp.velocity_x, cur.__damp.velocity_y, cur.__damp.velocity_z, cur.__damp.velocity_w); // ensure deriv is tangent\n\n  v4error.copy(v4result).multiplyScalar(v4velocity.dot(v4result) / v4result.dot(v4result));\n  cur.__damp.velocity_x -= v4error.x;\n  cur.__damp.velocity_y -= v4error.y;\n  cur.__damp.velocity_z -= v4error.z;\n  cur.__damp.velocity_w -= v4error.w;\n  current.set(v4result.x, v4result.y, v4result.z, v4result.w);\n  return aQ || bQ || cQ || dQ;\n}\n/**\n * Spherical Damp\n */\n\nvar spherical = /*@__PURE__*/new THREE.Spherical();\nvar aS, bS, cS;\nfunction dampS(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) spherical.set(target[0], target[1], target[2]);else spherical.copy(target);\n  aS = damp(current, \"radius\", spherical.radius, smoothTime, delta, maxSpeed, easing, eps);\n  bS = dampAngle(current, \"phi\", spherical.phi, smoothTime, delta, maxSpeed, easing, eps);\n  cS = dampAngle(current, \"theta\", spherical.theta, smoothTime, delta, maxSpeed, easing, eps);\n  return aS || bS || cS;\n}\n/**\n * Matrix4 Damp\n */\n\nvar mat = /*@__PURE__*/new THREE.Matrix4();\nvar mPos = /*@__PURE__*/new THREE.Vector3();\nvar mRot = /*@__PURE__*/new THREE.Quaternion();\nvar mSca = /*@__PURE__*/new THREE.Vector3();\nvar aM, bM, cM;\nfunction dampM(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n\n  if (cur.__damp === undefined) {\n    cur.__damp = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Quaternion(),\n      scale: new THREE.Vector3()\n    };\n    current.decompose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  }\n\n  if (Array.isArray(target)) mat.set.apply(mat, triangle_dist_maathTriangle._toConsumableArray(target));else mat.copy(target);\n  mat.decompose(mPos, mRot, mSca);\n  aM = damp3(cur.__damp.position, mPos, smoothTime, delta, maxSpeed, easing, eps);\n  bM = dampQ(cur.__damp.rotation, mRot, smoothTime, delta, maxSpeed, easing, eps);\n  cM = damp3(cur.__damp.scale, mSca, smoothTime, delta, maxSpeed, easing, eps);\n  current.compose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  return aM || bM || cM;\n}\n\nvar easing = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  rsqw: rsqw,\n  exp: exp,\n  linear: linear,\n  sine: sine,\n  cubic: cubic,\n  quint: quint,\n  circ: circ,\n  quart: quart,\n  expo: expo,\n  damp: damp,\n  dampLookAt: dampLookAt,\n  dampAngle: dampAngle,\n  damp2: damp2,\n  damp3: damp3,\n  damp4: damp4,\n  dampE: dampE,\n  dampC: dampC,\n  dampQ: dampQ,\n  dampS: dampS,\n  dampM: dampM\n});\n\nexports.circ = circ;\nexports.cubic = cubic;\nexports.damp = damp;\nexports.damp2 = damp2;\nexports.damp3 = damp3;\nexports.damp4 = damp4;\nexports.dampAngle = dampAngle;\nexports.dampC = dampC;\nexports.dampE = dampE;\nexports.dampLookAt = dampLookAt;\nexports.dampM = dampM;\nexports.dampQ = dampQ;\nexports.dampS = dampS;\nexports.easing = easing;\nexports.exp = exp;\nexports.expo = expo;\nexports.linear = linear;\nexports.quart = quart;\nexports.quint = quint;\nexports.rsqw = rsqw;\nexports.sine = sine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/easing-5c3709fe.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/geometry-0d5fe5bf.cjs.dev.js":
/*!**************************************************************!*\
  !*** ./node_modules/maath/dist/geometry-0d5fe5bf.cjs.dev.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar classCallCheck = __webpack_require__(/*! ./classCallCheck-eaf0efc7.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/classCallCheck-eaf0efc7.cjs.dev.js\");\nvar isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct-ddc4ebc1.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-ddc4ebc1.cjs.dev.js\");\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar THREE__namespace = /*#__PURE__*/_interopNamespace(THREE);\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) isNativeReflectConstruct._setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct._isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nvar RoundedPlaneGeometry = /*#__PURE__*/function (_THREE$BufferGeometry) {\n  _inherits(RoundedPlaneGeometry, _THREE$BufferGeometry);\n\n  var _super = _createSuper(RoundedPlaneGeometry);\n\n  function RoundedPlaneGeometry() {\n    var _this;\n\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.2;\n    var segments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 16;\n\n    classCallCheck._classCallCheck(this, RoundedPlaneGeometry);\n\n    _this = _super.call(this); // helper const's\n\n    var wi = width / 2 - radius; // inner width\n\n    var hi = height / 2 - radius; // inner height\n\n    var ul = radius / width; // u left\n\n    var ur = (width - radius) / width; // u right\n\n    var vl = radius / height; // v low\n\n    var vh = (height - radius) / height; // v high\n\n    var positions = [wi, hi, 0, -wi, hi, 0, -wi, -hi, 0, wi, -hi, 0];\n    var uvs = [ur, vh, ul, vh, ul, vl, ur, vl];\n    var n = [3 * (segments + 1) + 3, 3 * (segments + 1) + 4, segments + 4, segments + 5, 2 * (segments + 1) + 4, 2, 1, 2 * (segments + 1) + 3, 3, 4 * (segments + 1) + 3, 4, 0];\n    var indices = [n[0], n[1], n[2], n[0], n[2], n[3], n[4], n[5], n[6], n[4], n[6], n[7], n[8], n[9], n[10], n[8], n[10], n[11]];\n    var phi, cos, sin, xc, yc, uc, vc, idx;\n\n    for (var i = 0; i < 4; i++) {\n      xc = i < 1 || i > 2 ? wi : -wi;\n      yc = i < 2 ? hi : -hi;\n      uc = i < 1 || i > 2 ? ur : ul;\n      vc = i < 2 ? vh : vl;\n\n      for (var j = 0; j <= segments; j++) {\n        phi = Math.PI / 2 * (i + j / segments);\n        cos = Math.cos(phi);\n        sin = Math.sin(phi);\n        positions.push(xc + radius * cos, yc + radius * sin, 0);\n        uvs.push(uc + ul * cos, vc + vl * sin);\n\n        if (j < segments) {\n          idx = (segments + 1) * i + j + 4;\n          indices.push(i, idx, idx + 1);\n        }\n      }\n    }\n\n    _this.setIndex(new THREE__namespace.BufferAttribute(new Uint32Array(indices), 1));\n\n    _this.setAttribute(\"position\", new THREE__namespace.BufferAttribute(new Float32Array(positions), 3));\n\n    _this.setAttribute(\"uv\", new THREE__namespace.BufferAttribute(new Float32Array(uvs), 2));\n\n    return _this;\n  }\n\n  return RoundedPlaneGeometry;\n}(THREE__namespace.BufferGeometry); // Author: https://stackoverflow.com/users/128511/gman\n// https://stackoverflow.com/questions/34958072/programmatically-generate-simple-uv-mapping-for-models\n\nfunction applyCylindricalUV(bufferGeometry) {\n  var uvs = [];\n\n  for (var i = 0; i < bufferGeometry.attributes.position.array.length / 3; i++) {\n    var x = bufferGeometry.attributes.position.array[i * 3 + 0];\n    var y = bufferGeometry.attributes.position.array[i * 3 + 1];\n    var z = bufferGeometry.attributes.position.array[i * 3 + 2];\n    uvs.push(Math.atan2(x, z) / Math.PI * 0.5 + 0.5, y / Math.PI * 0.5 + 0.5);\n  }\n\n  if (bufferGeometry.attributes.uv) delete bufferGeometry.attributes.uv;\n  bufferGeometry.setAttribute(\"uv\", new THREE__namespace.Float32BufferAttribute(uvs, 2));\n  bufferGeometry.attributes.uv.needsUpdate = true;\n  return bufferGeometry;\n} // Author: https://stackoverflow.com/users/268905/knee-cola\n// https://stackoverflow.com/questions/20774648/three-js-generate-uv-coordinate\n\nfunction applySphereUV(bufferGeometry) {\n  var uvs = [];\n  var vertices = [];\n\n  for (var i = 0; i < bufferGeometry.attributes.position.array.length / 3; i++) {\n    var x = bufferGeometry.attributes.position.array[i * 3 + 0];\n    var y = bufferGeometry.attributes.position.array[i * 3 + 1];\n    var z = bufferGeometry.attributes.position.array[i * 3 + 2];\n    vertices.push(new THREE__namespace.Vector3(x, y, z));\n  }\n\n  var polarVertices = vertices.map(cartesian2polar);\n\n  for (var _i = 0; _i < polarVertices.length / 3; _i++) {\n    var tri = new THREE__namespace.Triangle(vertices[_i * 3 + 0], vertices[_i * 3 + 1], vertices[_i * 3 + 2]);\n    var normal = tri.getNormal(new THREE__namespace.Vector3());\n\n    for (var f = 0; f < 3; f++) {\n      var vertex = polarVertices[_i * 3 + f];\n\n      if (vertex.theta === 0 && (vertex.phi === 0 || vertex.phi === Math.PI)) {\n        var alignedVertice = vertex.phi === 0 ? _i * 3 + 1 : _i * 3 + 0;\n        vertex = {\n          r: vertex.r,\n          phi: vertex.phi,\n          theta: polarVertices[alignedVertice].theta\n        };\n      }\n\n      if (vertex.theta === Math.PI && cartesian2polar(normal).theta < Math.PI / 2) {\n        vertex.theta = -Math.PI;\n      }\n\n      var canvasPoint = polar2canvas(vertex);\n      uvs.push(1 - canvasPoint.x, 1 - canvasPoint.y);\n    }\n  }\n\n  if (bufferGeometry.attributes.uv) delete bufferGeometry.attributes.uv;\n  bufferGeometry.setAttribute(\"uv\", new THREE__namespace.Float32BufferAttribute(uvs, 2));\n  bufferGeometry.attributes.uv.needsUpdate = true;\n  return bufferGeometry;\n}\n\nfunction cartesian2polar(position) {\n  var r = Math.sqrt(position.x * position.x + position.z * position.z + position.y * position.y);\n  return {\n    r: r,\n    phi: Math.acos(position.y / r),\n    theta: Math.atan2(position.z, position.x)\n  };\n}\n\nfunction polar2canvas(polarPoint) {\n  return {\n    y: polarPoint.phi / Math.PI,\n    x: (polarPoint.theta + Math.PI) / (2 * Math.PI)\n  };\n} // Author: Alex Khoroshylov (https://stackoverflow.com/users/8742287/alex-khoroshylov)\n// https://stackoverflow.com/questions/20774648/three-js-generate-uv-coordinate\n\n\nfunction applyBoxUV(bufferGeometry) {\n  bufferGeometry.computeBoundingBox();\n  var bboxSize = bufferGeometry.boundingBox.getSize(new THREE__namespace.Vector3());\n  var boxSize = Math.min(bboxSize.x, bboxSize.y, bboxSize.z);\n  var boxGeometry = new THREE__namespace.BoxGeometry(boxSize, boxSize, boxSize);\n  var cube = new THREE__namespace.Mesh(boxGeometry);\n  cube.rotation.set(0, 0, 0);\n  cube.updateWorldMatrix(true, false);\n  var transformMatrix = cube.matrix.clone().invert();\n  var uvBbox = new THREE__namespace.Box3(new THREE__namespace.Vector3(-boxSize / 2, -boxSize / 2, -boxSize / 2), new THREE__namespace.Vector3(boxSize / 2, boxSize / 2, boxSize / 2));\n\n  _applyBoxUV(bufferGeometry, transformMatrix, uvBbox, boxSize);\n\n  bufferGeometry.attributes.uv.needsUpdate = true;\n  return bufferGeometry;\n}\n\nfunction _applyBoxUV(geom, transformMatrix, bbox, bbox_max_size) {\n  var coords = [];\n  coords.length = 2 * geom.attributes.position.array.length / 3; //maps 3 verts of 1 face on the better side of the cube\n  //side of the cube can be XY, XZ or YZ\n\n  var makeUVs = function makeUVs(v0, v1, v2) {\n    //pre-rotate the model so that cube sides match world axis\n    v0.applyMatrix4(transformMatrix);\n    v1.applyMatrix4(transformMatrix);\n    v2.applyMatrix4(transformMatrix); //get normal of the face, to know into which cube side it maps better\n\n    var n = new THREE__namespace.Vector3();\n    n.crossVectors(v1.clone().sub(v0), v1.clone().sub(v2)).normalize();\n    n.x = Math.abs(n.x);\n    n.y = Math.abs(n.y);\n    n.z = Math.abs(n.z);\n    var uv0 = new THREE__namespace.Vector2();\n    var uv1 = new THREE__namespace.Vector2();\n    var uv2 = new THREE__namespace.Vector2(); // xz mapping\n\n    if (n.y > n.x && n.y > n.z) {\n      uv0.x = (v0.x - bbox.min.x) / bbox_max_size;\n      uv0.y = (bbox.max.z - v0.z) / bbox_max_size;\n      uv1.x = (v1.x - bbox.min.x) / bbox_max_size;\n      uv1.y = (bbox.max.z - v1.z) / bbox_max_size;\n      uv2.x = (v2.x - bbox.min.x) / bbox_max_size;\n      uv2.y = (bbox.max.z - v2.z) / bbox_max_size;\n    } else if (n.x > n.y && n.x > n.z) {\n      uv0.x = (v0.z - bbox.min.z) / bbox_max_size;\n      uv0.y = (v0.y - bbox.min.y) / bbox_max_size;\n      uv1.x = (v1.z - bbox.min.z) / bbox_max_size;\n      uv1.y = (v1.y - bbox.min.y) / bbox_max_size;\n      uv2.x = (v2.z - bbox.min.z) / bbox_max_size;\n      uv2.y = (v2.y - bbox.min.y) / bbox_max_size;\n    } else if (n.z > n.y && n.z > n.x) {\n      uv0.x = (v0.x - bbox.min.x) / bbox_max_size;\n      uv0.y = (v0.y - bbox.min.y) / bbox_max_size;\n      uv1.x = (v1.x - bbox.min.x) / bbox_max_size;\n      uv1.y = (v1.y - bbox.min.y) / bbox_max_size;\n      uv2.x = (v2.x - bbox.min.x) / bbox_max_size;\n      uv2.y = (v2.y - bbox.min.y) / bbox_max_size;\n    }\n\n    return {\n      uv0: uv0,\n      uv1: uv1,\n      uv2: uv2\n    };\n  };\n\n  if (geom.index) {\n    // is it indexed buffer geometry?\n    for (var vi = 0; vi < geom.index.array.length; vi += 3) {\n      var idx0 = geom.index.array[vi];\n      var idx1 = geom.index.array[vi + 1];\n      var idx2 = geom.index.array[vi + 2];\n      var vx0 = geom.attributes.position.array[3 * idx0];\n      var vy0 = geom.attributes.position.array[3 * idx0 + 1];\n      var vz0 = geom.attributes.position.array[3 * idx0 + 2];\n      var vx1 = geom.attributes.position.array[3 * idx1];\n      var vy1 = geom.attributes.position.array[3 * idx1 + 1];\n      var vz1 = geom.attributes.position.array[3 * idx1 + 2];\n      var vx2 = geom.attributes.position.array[3 * idx2];\n      var vy2 = geom.attributes.position.array[3 * idx2 + 1];\n      var vz2 = geom.attributes.position.array[3 * idx2 + 2];\n      var v0 = new THREE__namespace.Vector3(vx0, vy0, vz0);\n      var v1 = new THREE__namespace.Vector3(vx1, vy1, vz1);\n      var v2 = new THREE__namespace.Vector3(vx2, vy2, vz2);\n      var uvs = makeUVs(v0, v1, v2);\n      coords[2 * idx0] = uvs.uv0.x;\n      coords[2 * idx0 + 1] = uvs.uv0.y;\n      coords[2 * idx1] = uvs.uv1.x;\n      coords[2 * idx1 + 1] = uvs.uv1.y;\n      coords[2 * idx2] = uvs.uv2.x;\n      coords[2 * idx2 + 1] = uvs.uv2.y;\n    }\n  } else {\n    for (var _vi = 0; _vi < geom.attributes.position.array.length; _vi += 9) {\n      var _vx = geom.attributes.position.array[_vi];\n      var _vy = geom.attributes.position.array[_vi + 1];\n      var _vz = geom.attributes.position.array[_vi + 2];\n      var _vx2 = geom.attributes.position.array[_vi + 3];\n      var _vy2 = geom.attributes.position.array[_vi + 4];\n      var _vz2 = geom.attributes.position.array[_vi + 5];\n      var _vx3 = geom.attributes.position.array[_vi + 6];\n      var _vy3 = geom.attributes.position.array[_vi + 7];\n      var _vz3 = geom.attributes.position.array[_vi + 8];\n\n      var _v = new THREE__namespace.Vector3(_vx, _vy, _vz);\n\n      var _v2 = new THREE__namespace.Vector3(_vx2, _vy2, _vz2);\n\n      var _v3 = new THREE__namespace.Vector3(_vx3, _vy3, _vz3);\n\n      var _uvs = makeUVs(_v, _v2, _v3);\n\n      var _idx = _vi / 3;\n\n      var _idx2 = _idx + 1;\n\n      var _idx3 = _idx + 2;\n\n      coords[2 * _idx] = _uvs.uv0.x;\n      coords[2 * _idx + 1] = _uvs.uv0.y;\n      coords[2 * _idx2] = _uvs.uv1.x;\n      coords[2 * _idx2 + 1] = _uvs.uv1.y;\n      coords[2 * _idx3] = _uvs.uv2.x;\n      coords[2 * _idx3 + 1] = _uvs.uv2.y;\n    }\n  }\n\n  if (geom.attributes.uv) delete geom.attributes.uv;\n  geom.setAttribute(\"uv\", new THREE__namespace.Float32BufferAttribute(coords, 2));\n}\n\nvar geometry = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  RoundedPlaneGeometry: RoundedPlaneGeometry,\n  applyCylindricalUV: applyCylindricalUV,\n  applySphereUV: applySphereUV,\n  applyBoxUV: applyBoxUV\n});\n\nexports.RoundedPlaneGeometry = RoundedPlaneGeometry;\nexports.applyBoxUV = applyBoxUV;\nexports.applyCylindricalUV = applyCylindricalUV;\nexports.applySphereUV = applySphereUV;\nexports.geometry = geometry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/geometry-0d5fe5bf.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/index-5afa9217.cjs.dev.js":
/*!***********************************************************!*\
  !*** ./node_modules/maath/dist/index-5afa9217.cjs.dev.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar objectSpread2 = __webpack_require__(/*! ./objectSpread2-32cd2c34.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/objectSpread2-32cd2c34.cjs.dev.js\");\nvar classCallCheck = __webpack_require__(/*! ./classCallCheck-eaf0efc7.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/classCallCheck-eaf0efc7.cjs.dev.js\");\nvar misc_dist_maathMisc = __webpack_require__(/*! ./misc-fce4d494.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/misc-fce4d494.cjs.dev.js\");\n\n/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nvar Grad = function Grad(x, y, z) {\n  var _this = this;\n\n  classCallCheck._classCallCheck(this, Grad);\n\n  objectSpread2._defineProperty(this, \"dot2\", function (x, y) {\n    return _this.x * x + _this.y * y;\n  });\n\n  objectSpread2._defineProperty(this, \"dot3\", function (x, y, z) {\n    return _this.x * x + _this.y * y + _this.z * z;\n  });\n\n  this.x = x;\n  this.y = y;\n  this.z = z;\n};\n\nvar grad3 = [new Grad(1, 1, 0), new Grad(-1, 1, 0), new Grad(1, -1, 0), new Grad(-1, -1, 0), new Grad(1, 0, 1), new Grad(-1, 0, 1), new Grad(1, 0, -1), new Grad(-1, 0, -1), new Grad(0, 1, 1), new Grad(0, -1, 1), new Grad(0, 1, -1), new Grad(0, -1, -1)];\nvar p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180]; // To remove the need for index wrapping, double the permutation table length\n\nvar perm = new Array(512);\nvar gradP = new Array(512); // This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\n\nvar seed = function seed(_seed) {\n  if (_seed > 0 && _seed < 1) {\n    // Scale the seed out\n    _seed *= 65536;\n  }\n\n  _seed = Math.floor(_seed);\n\n  if (_seed < 256) {\n    _seed |= _seed << 8;\n  }\n\n  for (var i = 0; i < 256; i++) {\n    var v;\n\n    if (i & 1) {\n      v = p[i] ^ _seed & 255;\n    } else {\n      v = p[i] ^ _seed >> 8 & 255;\n    }\n\n    perm[i] = perm[i + 256] = v;\n    gradP[i] = gradP[i + 256] = grad3[v % 12];\n  }\n};\nseed(0);\n/*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/\n// Skewing and unskewing factors for 2, 3, and 4 dimensions\n\nvar F2 = 0.5 * (Math.sqrt(3) - 1);\nvar G2 = (3 - Math.sqrt(3)) / 6;\nvar F3 = 1 / 3;\nvar G3 = 1 / 6; // 2D simplex noise\n\nvar simplex2 = function simplex2(xin, yin) {\n  var n0, n1, n2; // Noise contributions from the three corners\n  // Skew the input space to determine which simplex cell we're in\n\n  var s = (xin + yin) * F2; // Hairy factor for 2D\n\n  var i = Math.floor(xin + s);\n  var j = Math.floor(yin + s);\n  var t = (i + j) * G2;\n  var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n\n  var y0 = yin - j + t; // For the 2D case, the simplex shape is an equilateral triangle.\n  // Determine which simplex we are in.\n\n  var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\n  if (x0 > y0) {\n    // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n    i1 = 1;\n    j1 = 0;\n  } else {\n    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n    i1 = 0;\n    j1 = 1;\n  } // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n  // c = (3-sqrt(3))/6\n\n\n  var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\n  var y1 = y0 - j1 + G2;\n  var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n\n  var y2 = y0 - 1 + 2 * G2; // Work out the hashed gradient indices of the three simplex corners\n\n  i &= 255;\n  j &= 255;\n  var gi0 = gradP[i + perm[j]];\n  var gi1 = gradP[i + i1 + perm[j + j1]];\n  var gi2 = gradP[i + 1 + perm[j + 1]]; // Calculate the contribution from the three corners\n\n  var t0 = 0.5 - x0 * x0 - y0 * y0;\n\n  if (t0 < 0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\n  }\n\n  var t1 = 0.5 - x1 * x1 - y1 * y1;\n\n  if (t1 < 0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot2(x1, y1);\n  }\n\n  var t2 = 0.5 - x2 * x2 - y2 * y2;\n\n  if (t2 < 0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot2(x2, y2);\n  } // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n\n\n  return 70 * (n0 + n1 + n2);\n}; // 3D simplex noise\n\nvar simplex3 = function simplex3(xin, yin, zin) {\n  var n0, n1, n2, n3; // Noise contributions from the four corners\n  // Skew the input space to determine which simplex cell we're in\n\n  var s = (xin + yin + zin) * F3; // Hairy factor for 2D\n\n  var i = Math.floor(xin + s);\n  var j = Math.floor(yin + s);\n  var k = Math.floor(zin + s);\n  var t = (i + j + k) * G3;\n  var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n\n  var y0 = yin - j + t;\n  var z0 = zin - k + t; // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n  // Determine which simplex we are in.\n\n  var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n\n  var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n\n  if (x0 >= y0) {\n    if (y0 >= z0) {\n      i1 = 1;\n      j1 = 0;\n      k1 = 0;\n      i2 = 1;\n      j2 = 1;\n      k2 = 0;\n    } else if (x0 >= z0) {\n      i1 = 1;\n      j1 = 0;\n      k1 = 0;\n      i2 = 1;\n      j2 = 0;\n      k2 = 1;\n    } else {\n      i1 = 0;\n      j1 = 0;\n      k1 = 1;\n      i2 = 1;\n      j2 = 0;\n      k2 = 1;\n    }\n  } else {\n    if (y0 < z0) {\n      i1 = 0;\n      j1 = 0;\n      k1 = 1;\n      i2 = 0;\n      j2 = 1;\n      k2 = 1;\n    } else if (x0 < z0) {\n      i1 = 0;\n      j1 = 1;\n      k1 = 0;\n      i2 = 0;\n      j2 = 1;\n      k2 = 1;\n    } else {\n      i1 = 0;\n      j1 = 1;\n      k1 = 0;\n      i2 = 1;\n      j2 = 1;\n      k2 = 0;\n    }\n  } // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n  // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n  // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n  // c = 1/6.\n\n\n  var x1 = x0 - i1 + G3; // Offsets for second corner\n\n  var y1 = y0 - j1 + G3;\n  var z1 = z0 - k1 + G3;\n  var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n\n  var y2 = y0 - j2 + 2 * G3;\n  var z2 = z0 - k2 + 2 * G3;\n  var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n\n  var y3 = y0 - 1 + 3 * G3;\n  var z3 = z0 - 1 + 3 * G3; // Work out the hashed gradient indices of the four simplex corners\n\n  i &= 255;\n  j &= 255;\n  k &= 255;\n  var gi0 = gradP[i + perm[j + perm[k]]];\n  var gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\n  var gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\n  var gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]]; // Calculate the contribution from the four corners\n\n  var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n\n  if (t0 < 0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot3(x0, y0, z0); // (x,y) of grad3 used for 2D gradient\n  }\n\n  var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n\n  if (t1 < 0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n  }\n\n  var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n\n  if (t2 < 0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n  }\n\n  var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n\n  if (t3 < 0) {\n    n3 = 0;\n  } else {\n    t3 *= t3;\n    n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n  } // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n\n\n  return 32 * (n0 + n1 + n2 + n3);\n}; // ##### Perlin noise stuff\n// 2D Perlin Noise\n\nvar perlin2 = function perlin2(x, y) {\n  // Find unit grid cell containing point\n  var X = Math.floor(x),\n      Y = Math.floor(y); // Get relative xy coordinates of point within that cell\n\n  x = x - X;\n  y = y - Y; // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n\n  X = X & 255;\n  Y = Y & 255; // Calculate noise contributions from each of the four corners\n\n  var n00 = gradP[X + perm[Y]].dot2(x, y);\n  var n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\n  var n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\n  var n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1); // Compute the fade curve value for x\n\n  var u = misc_dist_maathMisc.fade(x); // Interpolate the four results\n\n  return misc_dist_maathMisc.lerp(misc_dist_maathMisc.lerp(n00, n10, u), misc_dist_maathMisc.lerp(n01, n11, u), misc_dist_maathMisc.fade(y));\n}; // 3D Perlin Noise\n\nvar perlin3 = function perlin3(x, y, z) {\n  // Find unit grid cell containing point\n  var X = Math.floor(x),\n      Y = Math.floor(y),\n      Z = Math.floor(z); // Get relative xyz coordinates of point within that cell\n\n  x = x - X;\n  y = y - Y;\n  z = z - Z; // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n\n  X = X & 255;\n  Y = Y & 255;\n  Z = Z & 255; // Calculate noise contributions from each of the eight corners\n\n  var n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z);\n  var n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1);\n  var n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z);\n  var n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\n  var n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z);\n  var n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1);\n  var n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\n  var n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1); // Compute the fade curve value for x, y, z\n\n  var u = misc_dist_maathMisc.fade(x);\n  var v = misc_dist_maathMisc.fade(y);\n  var w = misc_dist_maathMisc.fade(z); // Interpolate\n\n  return misc_dist_maathMisc.lerp(misc_dist_maathMisc.lerp(misc_dist_maathMisc.lerp(n000, n100, u), misc_dist_maathMisc.lerp(n001, n101, u), w), misc_dist_maathMisc.lerp(misc_dist_maathMisc.lerp(n010, n110, u), misc_dist_maathMisc.lerp(n011, n111, u), w), v);\n};\n\nvar noise = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  seed: seed,\n  simplex2: simplex2,\n  simplex3: simplex3,\n  perlin2: perlin2,\n  perlin3: perlin3\n});\n\nvar TAU = Math.PI * 2; // Credits @kchapelier https://github.com/kchapelier/wavefunctioncollapse/blob/master/example/lcg.js#L22-L30\n\nfunction normalizeSeed(seed) {\n  if (typeof seed === \"number\") {\n    seed = Math.abs(seed);\n  } else if (typeof seed === \"string\") {\n    var string = seed;\n    seed = 0;\n\n    for (var i = 0; i < string.length; i++) {\n      seed = (seed + (i + 1) * (string.charCodeAt(i) % 96)) % 2147483647;\n    }\n  }\n\n  if (seed === 0) {\n    seed = 311;\n  }\n\n  return seed;\n}\n\nfunction lcgRandom(seed) {\n  var state = normalizeSeed(seed);\n  return function () {\n    var result = state * 48271 % 2147483647;\n    state = result;\n    return result / 2147483647;\n  };\n}\n\nvar Generator = function Generator(_seed) {\n  var _this = this;\n\n  classCallCheck._classCallCheck(this, Generator);\n\n  objectSpread2._defineProperty(this, \"seed\", 0);\n\n  objectSpread2._defineProperty(this, \"init\", function (seed) {\n    _this.seed = seed;\n    _this.value = lcgRandom(seed);\n  });\n\n  objectSpread2._defineProperty(this, \"value\", lcgRandom(this.seed));\n\n  this.init(_seed);\n};\nvar defaultGen = new Generator(Math.random());\n/***\n * [3D] Sphere\n */\n\nvar defaultSphere = {\n  radius: 1,\n  center: [0, 0, 0]\n}; // random on surface of sphere\n// - https://twitter.com/fermatslibrary/status/1430932503578226688\n// - https://mathworld.wolfram.com/SpherePointPicking.html\n\nfunction onSphere(buffer, sphere) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultSphere$sphere = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultSphere), sphere),\n      radius = _defaultSphere$sphere.radius,\n      center = _defaultSphere$sphere.center;\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    var u = rng.value();\n    var v = rng.value();\n    var theta = Math.acos(2 * v - 1);\n    var phi = TAU * u;\n    buffer[i] = Math.sin(theta) * Math.cos(phi) * radius + center[0];\n    buffer[i + 1] = Math.sin(theta) * Math.sin(phi) * radius + center[1];\n    buffer[i + 2] = Math.cos(theta) * radius + center[2];\n  }\n\n  return buffer;\n} // from \"Another Method\" https://datagenetics.com/blog/january32020/index.html\n\nfunction inSphere(buffer, sphere) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultSphere$sphere2 = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultSphere), sphere),\n      radius = _defaultSphere$sphere2.radius,\n      center = _defaultSphere$sphere2.center;\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    var u = Math.pow(rng.value(), 1 / 3);\n    var x = rng.value() * 2 - 1;\n    var y = rng.value() * 2 - 1;\n    var z = rng.value() * 2 - 1;\n    var mag = Math.sqrt(x * x + y * y + z * z);\n    x = u * x / mag;\n    y = u * y / mag;\n    z = u * z / mag;\n    buffer[i] = x * radius + center[0];\n    buffer[i + 1] = y * radius + center[1];\n    buffer[i + 2] = z * radius + center[2];\n  }\n\n  return buffer;\n}\n/***\n * [2D] Circle\n */\n\nvar defaultCircle = {\n  radius: 1,\n  center: [0, 0]\n}; // random circle https://stackoverflow.com/a/50746409\n\nfunction inCircle(buffer, circle) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultCircle$circle = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultCircle), circle),\n      radius = _defaultCircle$circle.radius,\n      center = _defaultCircle$circle.center;\n\n  for (var i = 0; i < buffer.length; i += 2) {\n    var r = radius * Math.sqrt(rng.value());\n    var theta = rng.value() * TAU;\n    buffer[i] = Math.sin(theta) * r + center[0];\n    buffer[i + 1] = Math.cos(theta) * r + center[1];\n  }\n\n  return buffer;\n}\nfunction onCircle(buffer, circle) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultCircle$circle2 = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultCircle), circle),\n      radius = _defaultCircle$circle2.radius,\n      center = _defaultCircle$circle2.center;\n\n  for (var i = 0; i < buffer.length; i += 2) {\n    var theta = rng.value() * TAU;\n    buffer[i] = Math.sin(theta) * radius + center[0];\n    buffer[i + 1] = Math.cos(theta) * radius + center[1];\n  }\n\n  return buffer;\n}\n/**\n * [2D] Plane\n */\n\nvar defaultRect = {\n  sides: 1,\n  center: [0, 0]\n};\nfunction inRect(buffer, rect) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultRect$rect = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultRect), rect),\n      sides = _defaultRect$rect.sides,\n      center = _defaultRect$rect.center;\n\n  var sideX = typeof sides === \"number\" ? sides : sides[0];\n  var sideY = typeof sides === \"number\" ? sides : sides[1];\n\n  for (var i = 0; i < buffer.length; i += 2) {\n    buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n    buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n  }\n\n  return buffer;\n}\nfunction onRect(buffer, rect) {\n  return buffer;\n}\n/***\n * [3D] Box\n */\n\nfunction inBox(buffer, box) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultBox$box = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultBox), box),\n      sides = _defaultBox$box.sides,\n      center = _defaultBox$box.center;\n\n  var sideX = typeof sides === \"number\" ? sides : sides[0];\n  var sideY = typeof sides === \"number\" ? sides : sides[1];\n  var sideZ = typeof sides === \"number\" ? sides : sides[2];\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n    buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n    buffer[i + 2] = (rng.value() - 0.5) * sideZ + center[2];\n  }\n\n  return buffer;\n}\nvar defaultBox = {\n  sides: 1,\n  center: [0, 0, 0]\n};\nfunction onBox(buffer, box) {\n  var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n\n  var _defaultBox$box2 = objectSpread2._objectSpread2(objectSpread2._objectSpread2({}, defaultBox), box),\n      sides = _defaultBox$box2.sides,\n      center = _defaultBox$box2.center;\n\n  var sideX = typeof sides === \"number\" ? sides : sides[0];\n  var sideY = typeof sides === \"number\" ? sides : sides[1];\n  var sideZ = typeof sides === \"number\" ? sides : sides[2];\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n    buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n    buffer[i + 2] = (rng.value() - 0.5) * sideZ + center[2];\n  }\n\n  return buffer;\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Generator: Generator,\n  onSphere: onSphere,\n  inSphere: inSphere,\n  inCircle: inCircle,\n  onCircle: onCircle,\n  inRect: inRect,\n  onRect: onRect,\n  inBox: inBox,\n  onBox: onBox,\n  noise: noise\n});\n\nexports.Generator = Generator;\nexports.inBox = inBox;\nexports.inCircle = inCircle;\nexports.inRect = inRect;\nexports.inSphere = inSphere;\nexports.index = index;\nexports.noise = noise;\nexports.onBox = onBox;\nexports.onCircle = onCircle;\nexports.onRect = onRect;\nexports.onSphere = onSphere;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9pbmRleC01YWZhOTIxNy5janMuZGV2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLG9CQUFvQixtQkFBTyxDQUFDLDhHQUFxQztBQUNqRSxxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBc0M7QUFDbkUsMEJBQTBCLG1CQUFPLENBQUMsNEZBQTRCOztBQUU5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRwQ0FBNHBDOztBQUU1cEM7QUFDQSw0QkFBNEI7QUFDNUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLFNBQVM7QUFDM0I7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjs7QUFFaEI7QUFDQSxrQkFBa0I7QUFDbEI7O0FBRUEsNEJBQTRCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCLHdCQUF3QjtBQUN4Qjs7QUFFQSxjQUFjOztBQUVkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOzs7QUFHQSx5QkFBeUI7O0FBRXpCO0FBQ0EsNEJBQTRCOztBQUU1Qiw0QkFBNEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDOztBQUV4Qzs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EscUNBQXFDO0FBQ3JDOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjs7O0FBR0E7QUFDQSxHQUFHOztBQUVIO0FBQ0Esc0JBQXNCO0FBQ3RCOztBQUVBLGtDQUFrQzs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCO0FBQ0Esd0JBQXdCO0FBQ3hCOztBQUVBLGtCQUFrQjs7QUFFbEIsa0JBQWtCOztBQUVsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOzs7QUFHQSx5QkFBeUI7O0FBRXpCO0FBQ0E7QUFDQSw2QkFBNkI7O0FBRTdCO0FBQ0E7QUFDQSw0QkFBNEI7O0FBRTVCO0FBQ0EsNEJBQTRCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7O0FBRXREOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSx5Q0FBeUM7QUFDekM7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKOzs7QUFHQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7O0FBRXpCO0FBQ0EsYUFBYTs7QUFFYjtBQUNBLGVBQWU7O0FBRWY7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEOztBQUUzRCx1Q0FBdUM7O0FBRXZDO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qjs7QUFFekI7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBLGVBQWU7O0FBRWY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUY7O0FBRWpGO0FBQ0E7QUFDQSx1Q0FBdUM7O0FBRXZDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELHVCQUF1Qjs7QUFFdkI7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUEsb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsMEZBQTBGO0FBQzFGO0FBQ0E7O0FBRUEsa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBOztBQUVBLDJGQUEyRjtBQUMzRjtBQUNBOztBQUVBLGtCQUFrQixtQkFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBLDBGQUEwRjtBQUMxRjtBQUNBOztBQUVBLGtCQUFrQixtQkFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyRkFBMkY7QUFDM0Y7QUFDQTs7QUFFQSxrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNGQUFzRjtBQUN0RjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG9GQUFvRjtBQUNwRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUZBQXFGO0FBQ3JGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixtQkFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsZ0JBQWdCO0FBQ2hCLGNBQWM7QUFDZCxnQkFBZ0I7QUFDaEIsYUFBYTtBQUNiLGFBQWE7QUFDYixhQUFhO0FBQ2IsZ0JBQWdCO0FBQ2hCLGNBQWM7QUFDZCxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW50Y2FyLy4vbm9kZV9tb2R1bGVzL21hYXRoL2Rpc3QvaW5kZXgtNWFmYTkyMTcuY2pzLmRldi5qcz8wMDUxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIG9iamVjdFNwcmVhZDIgPSByZXF1aXJlKCcuL29iamVjdFNwcmVhZDItMzJjZDJjMzQuY2pzLmRldi5qcycpO1xudmFyIGNsYXNzQ2FsbENoZWNrID0gcmVxdWlyZSgnLi9jbGFzc0NhbGxDaGVjay1lYWYwZWZjNy5janMuZGV2LmpzJyk7XG52YXIgbWlzY19kaXN0X21hYXRoTWlzYyA9IHJlcXVpcmUoJy4vbWlzYy1mY2U0ZDQ5NC5janMuZGV2LmpzJyk7XG5cbi8qXG4gKiBBIHNwZWVkLWltcHJvdmVkIHBlcmxpbiBhbmQgc2ltcGxleCBub2lzZSBhbGdvcml0aG1zIGZvciAyRC5cbiAqXG4gKiBCYXNlZCBvbiBleGFtcGxlIGNvZGUgYnkgU3RlZmFuIEd1c3RhdnNvbiAoc3RlZ3VAaXRuLmxpdS5zZSkuXG4gKiBPcHRpbWlzYXRpb25zIGJ5IFBldGVyIEVhc3RtYW4gKHBlYXN0bWFuQGRyaXp6bGUuc3RhbmZvcmQuZWR1KS5cbiAqIEJldHRlciByYW5rIG9yZGVyaW5nIG1ldGhvZCBieSBTdGVmYW4gR3VzdGF2c29uIGluIDIwMTIuXG4gKiBDb252ZXJ0ZWQgdG8gSmF2YXNjcmlwdCBieSBKb3NlcGggR2VudGxlLlxuICpcbiAqIFZlcnNpb24gMjAxMi0wMy0wOVxuICpcbiAqIFRoaXMgY29kZSB3YXMgcGxhY2VkIGluIHRoZSBwdWJsaWMgZG9tYWluIGJ5IGl0cyBvcmlnaW5hbCBhdXRob3IsXG4gKiBTdGVmYW4gR3VzdGF2c29uLiBZb3UgbWF5IHVzZSBpdCBhcyB5b3Ugc2VlIGZpdCwgYnV0XG4gKiBhdHRyaWJ1dGlvbiBpcyBhcHByZWNpYXRlZC5cbiAqXG4gKi9cblxudmFyIEdyYWQgPSBmdW5jdGlvbiBHcmFkKHgsIHksIHopIHtcbiAgdmFyIF90aGlzID0gdGhpcztcblxuICBjbGFzc0NhbGxDaGVjay5fY2xhc3NDYWxsQ2hlY2sodGhpcywgR3JhZCk7XG5cbiAgb2JqZWN0U3ByZWFkMi5fZGVmaW5lUHJvcGVydHkodGhpcywgXCJkb3QyXCIsIGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgcmV0dXJuIF90aGlzLnggKiB4ICsgX3RoaXMueSAqIHk7XG4gIH0pO1xuXG4gIG9iamVjdFNwcmVhZDIuX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiZG90M1wiLCBmdW5jdGlvbiAoeCwgeSwgeikge1xuICAgIHJldHVybiBfdGhpcy54ICogeCArIF90aGlzLnkgKiB5ICsgX3RoaXMueiAqIHo7XG4gIH0pO1xuXG4gIHRoaXMueCA9IHg7XG4gIHRoaXMueSA9IHk7XG4gIHRoaXMueiA9IHo7XG59O1xuXG52YXIgZ3JhZDMgPSBbbmV3IEdyYWQoMSwgMSwgMCksIG5ldyBHcmFkKC0xLCAxLCAwKSwgbmV3IEdyYWQoMSwgLTEsIDApLCBuZXcgR3JhZCgtMSwgLTEsIDApLCBuZXcgR3JhZCgxLCAwLCAxKSwgbmV3IEdyYWQoLTEsIDAsIDEpLCBuZXcgR3JhZCgxLCAwLCAtMSksIG5ldyBHcmFkKC0xLCAwLCAtMSksIG5ldyBHcmFkKDAsIDEsIDEpLCBuZXcgR3JhZCgwLCAtMSwgMSksIG5ldyBHcmFkKDAsIDEsIC0xKSwgbmV3IEdyYWQoMCwgLTEsIC0xKV07XG52YXIgcCA9IFsxNTEsIDE2MCwgMTM3LCA5MSwgOTAsIDE1LCAxMzEsIDEzLCAyMDEsIDk1LCA5NiwgNTMsIDE5NCwgMjMzLCA3LCAyMjUsIDE0MCwgMzYsIDEwMywgMzAsIDY5LCAxNDIsIDgsIDk5LCAzNywgMjQwLCAyMSwgMTAsIDIzLCAxOTAsIDYsIDE0OCwgMjQ3LCAxMjAsIDIzNCwgNzUsIDAsIDI2LCAxOTcsIDYyLCA5NCwgMjUyLCAyMTksIDIwMywgMTE3LCAzNSwgMTEsIDMyLCA1NywgMTc3LCAzMywgODgsIDIzNywgMTQ5LCA1NiwgODcsIDE3NCwgMjAsIDEyNSwgMTM2LCAxNzEsIDE2OCwgNjgsIDE3NSwgNzQsIDE2NSwgNzEsIDEzNCwgMTM5LCA0OCwgMjcsIDE2NiwgNzcsIDE0NiwgMTU4LCAyMzEsIDgzLCAxMTEsIDIyOSwgMTIyLCA2MCwgMjExLCAxMzMsIDIzMCwgMjIwLCAxMDUsIDkyLCA0MSwgNTUsIDQ2LCAyNDUsIDQwLCAyNDQsIDEwMiwgMTQzLCA1NCwgNjUsIDI1LCA2MywgMTYxLCAxLCAyMTYsIDgwLCA3MywgMjA5LCA3NiwgMTMyLCAxODcsIDIwOCwgODksIDE4LCAxNjksIDIwMCwgMTk2LCAxMzUsIDEzMCwgMTE2LCAxODgsIDE1OSwgODYsIDE2NCwgMTAwLCAxMDksIDE5OCwgMTczLCAxODYsIDMsIDY0LCA1MiwgMjE3LCAyMjYsIDI1MCwgMTI0LCAxMjMsIDUsIDIwMiwgMzgsIDE0NywgMTE4LCAxMjYsIDI1NSwgODIsIDg1LCAyMTIsIDIwNywgMjA2LCA1OSwgMjI3LCA0NywgMTYsIDU4LCAxNywgMTgyLCAxODksIDI4LCA0MiwgMjIzLCAxODMsIDE3MCwgMjEzLCAxMTksIDI0OCwgMTUyLCAyLCA0NCwgMTU0LCAxNjMsIDcwLCAyMjEsIDE1MywgMTAxLCAxNTUsIDE2NywgNDMsIDE3MiwgOSwgMTI5LCAyMiwgMzksIDI1MywgMTksIDk4LCAxMDgsIDExMCwgNzksIDExMywgMjI0LCAyMzIsIDE3OCwgMTg1LCAxMTIsIDEwNCwgMjE4LCAyNDYsIDk3LCAyMjgsIDI1MSwgMzQsIDI0MiwgMTkzLCAyMzgsIDIxMCwgMTQ0LCAxMiwgMTkxLCAxNzksIDE2MiwgMjQxLCA4MSwgNTEsIDE0NSwgMjM1LCAyNDksIDE0LCAyMzksIDEwNywgNDksIDE5MiwgMjE0LCAzMSwgMTgxLCAxOTksIDEwNiwgMTU3LCAxODQsIDg0LCAyMDQsIDE3NiwgMTE1LCAxMjEsIDUwLCA0NSwgMTI3LCA0LCAxNTAsIDI1NCwgMTM4LCAyMzYsIDIwNSwgOTMsIDIyMiwgMTE0LCA2NywgMjksIDI0LCA3MiwgMjQzLCAxNDEsIDEyOCwgMTk1LCA3OCwgNjYsIDIxNSwgNjEsIDE1NiwgMTgwXTsgLy8gVG8gcmVtb3ZlIHRoZSBuZWVkIGZvciBpbmRleCB3cmFwcGluZywgZG91YmxlIHRoZSBwZXJtdXRhdGlvbiB0YWJsZSBsZW5ndGhcblxudmFyIHBlcm0gPSBuZXcgQXJyYXkoNTEyKTtcbnZhciBncmFkUCA9IG5ldyBBcnJheSg1MTIpOyAvLyBUaGlzIGlzbid0IGEgdmVyeSBnb29kIHNlZWRpbmcgZnVuY3Rpb24sIGJ1dCBpdCB3b3JrcyBvay4gSXQgc3VwcG9ydHMgMl4xNlxuLy8gZGlmZmVyZW50IHNlZWQgdmFsdWVzLiBXcml0ZSBzb21ldGhpbmcgYmV0dGVyIGlmIHlvdSBuZWVkIG1vcmUgc2VlZHMuXG5cbnZhciBzZWVkID0gZnVuY3Rpb24gc2VlZChfc2VlZCkge1xuICBpZiAoX3NlZWQgPiAwICYmIF9zZWVkIDwgMSkge1xuICAgIC8vIFNjYWxlIHRoZSBzZWVkIG91dFxuICAgIF9zZWVkICo9IDY1NTM2O1xuICB9XG5cbiAgX3NlZWQgPSBNYXRoLmZsb29yKF9zZWVkKTtcblxuICBpZiAoX3NlZWQgPCAyNTYpIHtcbiAgICBfc2VlZCB8PSBfc2VlZCA8PCA4O1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7IGkrKykge1xuICAgIHZhciB2O1xuXG4gICAgaWYgKGkgJiAxKSB7XG4gICAgICB2ID0gcFtpXSBeIF9zZWVkICYgMjU1O1xuICAgIH0gZWxzZSB7XG4gICAgICB2ID0gcFtpXSBeIF9zZWVkID4+IDggJiAyNTU7XG4gICAgfVxuXG4gICAgcGVybVtpXSA9IHBlcm1baSArIDI1Nl0gPSB2O1xuICAgIGdyYWRQW2ldID0gZ3JhZFBbaSArIDI1Nl0gPSBncmFkM1t2ICUgMTJdO1xuICB9XG59O1xuc2VlZCgwKTtcbi8qXG4gIGZvcih2YXIgaT0wOyBpPDI1NjsgaSsrKSB7XG4gICAgcGVybVtpXSA9IHBlcm1baSArIDI1Nl0gPSBwW2ldO1xuICAgIGdyYWRQW2ldID0gZ3JhZFBbaSArIDI1Nl0gPSBncmFkM1twZXJtW2ldICUgMTJdO1xuICB9Ki9cbi8vIFNrZXdpbmcgYW5kIHVuc2tld2luZyBmYWN0b3JzIGZvciAyLCAzLCBhbmQgNCBkaW1lbnNpb25zXG5cbnZhciBGMiA9IDAuNSAqIChNYXRoLnNxcnQoMykgLSAxKTtcbnZhciBHMiA9ICgzIC0gTWF0aC5zcXJ0KDMpKSAvIDY7XG52YXIgRjMgPSAxIC8gMztcbnZhciBHMyA9IDEgLyA2OyAvLyAyRCBzaW1wbGV4IG5vaXNlXG5cbnZhciBzaW1wbGV4MiA9IGZ1bmN0aW9uIHNpbXBsZXgyKHhpbiwgeWluKSB7XG4gIHZhciBuMCwgbjEsIG4yOyAvLyBOb2lzZSBjb250cmlidXRpb25zIGZyb20gdGhlIHRocmVlIGNvcm5lcnNcbiAgLy8gU2tldyB0aGUgaW5wdXQgc3BhY2UgdG8gZGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggY2VsbCB3ZSdyZSBpblxuXG4gIHZhciBzID0gKHhpbiArIHlpbikgKiBGMjsgLy8gSGFpcnkgZmFjdG9yIGZvciAyRFxuXG4gIHZhciBpID0gTWF0aC5mbG9vcih4aW4gKyBzKTtcbiAgdmFyIGogPSBNYXRoLmZsb29yKHlpbiArIHMpO1xuICB2YXIgdCA9IChpICsgaikgKiBHMjtcbiAgdmFyIHgwID0geGluIC0gaSArIHQ7IC8vIFRoZSB4LHkgZGlzdGFuY2VzIGZyb20gdGhlIGNlbGwgb3JpZ2luLCB1bnNrZXdlZC5cblxuICB2YXIgeTAgPSB5aW4gLSBqICsgdDsgLy8gRm9yIHRoZSAyRCBjYXNlLCB0aGUgc2ltcGxleCBzaGFwZSBpcyBhbiBlcXVpbGF0ZXJhbCB0cmlhbmdsZS5cbiAgLy8gRGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggd2UgYXJlIGluLlxuXG4gIHZhciBpMSwgajE7IC8vIE9mZnNldHMgZm9yIHNlY29uZCAobWlkZGxlKSBjb3JuZXIgb2Ygc2ltcGxleCBpbiAoaSxqKSBjb29yZHNcblxuICBpZiAoeDAgPiB5MCkge1xuICAgIC8vIGxvd2VyIHRyaWFuZ2xlLCBYWSBvcmRlcjogKDAsMCktPigxLDApLT4oMSwxKVxuICAgIGkxID0gMTtcbiAgICBqMSA9IDA7XG4gIH0gZWxzZSB7XG4gICAgLy8gdXBwZXIgdHJpYW5nbGUsIFlYIG9yZGVyOiAoMCwwKS0+KDAsMSktPigxLDEpXG4gICAgaTEgPSAwO1xuICAgIGoxID0gMTtcbiAgfSAvLyBBIHN0ZXAgb2YgKDEsMCkgaW4gKGksaikgbWVhbnMgYSBzdGVwIG9mICgxLWMsLWMpIGluICh4LHkpLCBhbmRcbiAgLy8gYSBzdGVwIG9mICgwLDEpIGluIChpLGopIG1lYW5zIGEgc3RlcCBvZiAoLWMsMS1jKSBpbiAoeCx5KSwgd2hlcmVcbiAgLy8gYyA9ICgzLXNxcnQoMykpLzZcblxuXG4gIHZhciB4MSA9IHgwIC0gaTEgKyBHMjsgLy8gT2Zmc2V0cyBmb3IgbWlkZGxlIGNvcm5lciBpbiAoeCx5KSB1bnNrZXdlZCBjb29yZHNcblxuICB2YXIgeTEgPSB5MCAtIGoxICsgRzI7XG4gIHZhciB4MiA9IHgwIC0gMSArIDIgKiBHMjsgLy8gT2Zmc2V0cyBmb3IgbGFzdCBjb3JuZXIgaW4gKHgseSkgdW5za2V3ZWQgY29vcmRzXG5cbiAgdmFyIHkyID0geTAgLSAxICsgMiAqIEcyOyAvLyBXb3JrIG91dCB0aGUgaGFzaGVkIGdyYWRpZW50IGluZGljZXMgb2YgdGhlIHRocmVlIHNpbXBsZXggY29ybmVyc1xuXG4gIGkgJj0gMjU1O1xuICBqICY9IDI1NTtcbiAgdmFyIGdpMCA9IGdyYWRQW2kgKyBwZXJtW2pdXTtcbiAgdmFyIGdpMSA9IGdyYWRQW2kgKyBpMSArIHBlcm1baiArIGoxXV07XG4gIHZhciBnaTIgPSBncmFkUFtpICsgMSArIHBlcm1baiArIDFdXTsgLy8gQ2FsY3VsYXRlIHRoZSBjb250cmlidXRpb24gZnJvbSB0aGUgdGhyZWUgY29ybmVyc1xuXG4gIHZhciB0MCA9IDAuNSAtIHgwICogeDAgLSB5MCAqIHkwO1xuXG4gIGlmICh0MCA8IDApIHtcbiAgICBuMCA9IDA7XG4gIH0gZWxzZSB7XG4gICAgdDAgKj0gdDA7XG4gICAgbjAgPSB0MCAqIHQwICogZ2kwLmRvdDIoeDAsIHkwKTsgLy8gKHgseSkgb2YgZ3JhZDMgdXNlZCBmb3IgMkQgZ3JhZGllbnRcbiAgfVxuXG4gIHZhciB0MSA9IDAuNSAtIHgxICogeDEgLSB5MSAqIHkxO1xuXG4gIGlmICh0MSA8IDApIHtcbiAgICBuMSA9IDA7XG4gIH0gZWxzZSB7XG4gICAgdDEgKj0gdDE7XG4gICAgbjEgPSB0MSAqIHQxICogZ2kxLmRvdDIoeDEsIHkxKTtcbiAgfVxuXG4gIHZhciB0MiA9IDAuNSAtIHgyICogeDIgLSB5MiAqIHkyO1xuXG4gIGlmICh0MiA8IDApIHtcbiAgICBuMiA9IDA7XG4gIH0gZWxzZSB7XG4gICAgdDIgKj0gdDI7XG4gICAgbjIgPSB0MiAqIHQyICogZ2kyLmRvdDIoeDIsIHkyKTtcbiAgfSAvLyBBZGQgY29udHJpYnV0aW9ucyBmcm9tIGVhY2ggY29ybmVyIHRvIGdldCB0aGUgZmluYWwgbm9pc2UgdmFsdWUuXG4gIC8vIFRoZSByZXN1bHQgaXMgc2NhbGVkIHRvIHJldHVybiB2YWx1ZXMgaW4gdGhlIGludGVydmFsIFstMSwxXS5cblxuXG4gIHJldHVybiA3MCAqIChuMCArIG4xICsgbjIpO1xufTsgLy8gM0Qgc2ltcGxleCBub2lzZVxuXG52YXIgc2ltcGxleDMgPSBmdW5jdGlvbiBzaW1wbGV4Myh4aW4sIHlpbiwgemluKSB7XG4gIHZhciBuMCwgbjEsIG4yLCBuMzsgLy8gTm9pc2UgY29udHJpYnV0aW9ucyBmcm9tIHRoZSBmb3VyIGNvcm5lcnNcbiAgLy8gU2tldyB0aGUgaW5wdXQgc3BhY2UgdG8gZGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggY2VsbCB3ZSdyZSBpblxuXG4gIHZhciBzID0gKHhpbiArIHlpbiArIHppbikgKiBGMzsgLy8gSGFpcnkgZmFjdG9yIGZvciAyRFxuXG4gIHZhciBpID0gTWF0aC5mbG9vcih4aW4gKyBzKTtcbiAgdmFyIGogPSBNYXRoLmZsb29yKHlpbiArIHMpO1xuICB2YXIgayA9IE1hdGguZmxvb3IoemluICsgcyk7XG4gIHZhciB0ID0gKGkgKyBqICsgaykgKiBHMztcbiAgdmFyIHgwID0geGluIC0gaSArIHQ7IC8vIFRoZSB4LHkgZGlzdGFuY2VzIGZyb20gdGhlIGNlbGwgb3JpZ2luLCB1bnNrZXdlZC5cblxuICB2YXIgeTAgPSB5aW4gLSBqICsgdDtcbiAgdmFyIHowID0gemluIC0gayArIHQ7IC8vIEZvciB0aGUgM0QgY2FzZSwgdGhlIHNpbXBsZXggc2hhcGUgaXMgYSBzbGlnaHRseSBpcnJlZ3VsYXIgdGV0cmFoZWRyb24uXG4gIC8vIERldGVybWluZSB3aGljaCBzaW1wbGV4IHdlIGFyZSBpbi5cblxuICB2YXIgaTEsIGoxLCBrMTsgLy8gT2Zmc2V0cyBmb3Igc2Vjb25kIGNvcm5lciBvZiBzaW1wbGV4IGluIChpLGosaykgY29vcmRzXG5cbiAgdmFyIGkyLCBqMiwgazI7IC8vIE9mZnNldHMgZm9yIHRoaXJkIGNvcm5lciBvZiBzaW1wbGV4IGluIChpLGosaykgY29vcmRzXG5cbiAgaWYgKHgwID49IHkwKSB7XG4gICAgaWYgKHkwID49IHowKSB7XG4gICAgICBpMSA9IDE7XG4gICAgICBqMSA9IDA7XG4gICAgICBrMSA9IDA7XG4gICAgICBpMiA9IDE7XG4gICAgICBqMiA9IDE7XG4gICAgICBrMiA9IDA7XG4gICAgfSBlbHNlIGlmICh4MCA+PSB6MCkge1xuICAgICAgaTEgPSAxO1xuICAgICAgajEgPSAwO1xuICAgICAgazEgPSAwO1xuICAgICAgaTIgPSAxO1xuICAgICAgajIgPSAwO1xuICAgICAgazIgPSAxO1xuICAgIH0gZWxzZSB7XG4gICAgICBpMSA9IDA7XG4gICAgICBqMSA9IDA7XG4gICAgICBrMSA9IDE7XG4gICAgICBpMiA9IDE7XG4gICAgICBqMiA9IDA7XG4gICAgICBrMiA9IDE7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmICh5MCA8IHowKSB7XG4gICAgICBpMSA9IDA7XG4gICAgICBqMSA9IDA7XG4gICAgICBrMSA9IDE7XG4gICAgICBpMiA9IDA7XG4gICAgICBqMiA9IDE7XG4gICAgICBrMiA9IDE7XG4gICAgfSBlbHNlIGlmICh4MCA8IHowKSB7XG4gICAgICBpMSA9IDA7XG4gICAgICBqMSA9IDE7XG4gICAgICBrMSA9IDA7XG4gICAgICBpMiA9IDA7XG4gICAgICBqMiA9IDE7XG4gICAgICBrMiA9IDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIGkxID0gMDtcbiAgICAgIGoxID0gMTtcbiAgICAgIGsxID0gMDtcbiAgICAgIGkyID0gMTtcbiAgICAgIGoyID0gMTtcbiAgICAgIGsyID0gMDtcbiAgICB9XG4gIH0gLy8gQSBzdGVwIG9mICgxLDAsMCkgaW4gKGksaixrKSBtZWFucyBhIHN0ZXAgb2YgKDEtYywtYywtYykgaW4gKHgseSx6KSxcbiAgLy8gYSBzdGVwIG9mICgwLDEsMCkgaW4gKGksaixrKSBtZWFucyBhIHN0ZXAgb2YgKC1jLDEtYywtYykgaW4gKHgseSx6KSwgYW5kXG4gIC8vIGEgc3RlcCBvZiAoMCwwLDEpIGluIChpLGosaykgbWVhbnMgYSBzdGVwIG9mICgtYywtYywxLWMpIGluICh4LHkseiksIHdoZXJlXG4gIC8vIGMgPSAxLzYuXG5cblxuICB2YXIgeDEgPSB4MCAtIGkxICsgRzM7IC8vIE9mZnNldHMgZm9yIHNlY29uZCBjb3JuZXJcblxuICB2YXIgeTEgPSB5MCAtIGoxICsgRzM7XG4gIHZhciB6MSA9IHowIC0gazEgKyBHMztcbiAgdmFyIHgyID0geDAgLSBpMiArIDIgKiBHMzsgLy8gT2Zmc2V0cyBmb3IgdGhpcmQgY29ybmVyXG5cbiAgdmFyIHkyID0geTAgLSBqMiArIDIgKiBHMztcbiAgdmFyIHoyID0gejAgLSBrMiArIDIgKiBHMztcbiAgdmFyIHgzID0geDAgLSAxICsgMyAqIEczOyAvLyBPZmZzZXRzIGZvciBmb3VydGggY29ybmVyXG5cbiAgdmFyIHkzID0geTAgLSAxICsgMyAqIEczO1xuICB2YXIgejMgPSB6MCAtIDEgKyAzICogRzM7IC8vIFdvcmsgb3V0IHRoZSBoYXNoZWQgZ3JhZGllbnQgaW5kaWNlcyBvZiB0aGUgZm91ciBzaW1wbGV4IGNvcm5lcnNcblxuICBpICY9IDI1NTtcbiAgaiAmPSAyNTU7XG4gIGsgJj0gMjU1O1xuICB2YXIgZ2kwID0gZ3JhZFBbaSArIHBlcm1baiArIHBlcm1ba11dXTtcbiAgdmFyIGdpMSA9IGdyYWRQW2kgKyBpMSArIHBlcm1baiArIGoxICsgcGVybVtrICsgazFdXV07XG4gIHZhciBnaTIgPSBncmFkUFtpICsgaTIgKyBwZXJtW2ogKyBqMiArIHBlcm1bayArIGsyXV1dO1xuICB2YXIgZ2kzID0gZ3JhZFBbaSArIDEgKyBwZXJtW2ogKyAxICsgcGVybVtrICsgMV1dXTsgLy8gQ2FsY3VsYXRlIHRoZSBjb250cmlidXRpb24gZnJvbSB0aGUgZm91ciBjb3JuZXJzXG5cbiAgdmFyIHQwID0gMC42IC0geDAgKiB4MCAtIHkwICogeTAgLSB6MCAqIHowO1xuXG4gIGlmICh0MCA8IDApIHtcbiAgICBuMCA9IDA7XG4gIH0gZWxzZSB7XG4gICAgdDAgKj0gdDA7XG4gICAgbjAgPSB0MCAqIHQwICogZ2kwLmRvdDMoeDAsIHkwLCB6MCk7IC8vICh4LHkpIG9mIGdyYWQzIHVzZWQgZm9yIDJEIGdyYWRpZW50XG4gIH1cblxuICB2YXIgdDEgPSAwLjYgLSB4MSAqIHgxIC0geTEgKiB5MSAtIHoxICogejE7XG5cbiAgaWYgKHQxIDwgMCkge1xuICAgIG4xID0gMDtcbiAgfSBlbHNlIHtcbiAgICB0MSAqPSB0MTtcbiAgICBuMSA9IHQxICogdDEgKiBnaTEuZG90Myh4MSwgeTEsIHoxKTtcbiAgfVxuXG4gIHZhciB0MiA9IDAuNiAtIHgyICogeDIgLSB5MiAqIHkyIC0gejIgKiB6MjtcblxuICBpZiAodDIgPCAwKSB7XG4gICAgbjIgPSAwO1xuICB9IGVsc2Uge1xuICAgIHQyICo9IHQyO1xuICAgIG4yID0gdDIgKiB0MiAqIGdpMi5kb3QzKHgyLCB5MiwgejIpO1xuICB9XG5cbiAgdmFyIHQzID0gMC42IC0geDMgKiB4MyAtIHkzICogeTMgLSB6MyAqIHozO1xuXG4gIGlmICh0MyA8IDApIHtcbiAgICBuMyA9IDA7XG4gIH0gZWxzZSB7XG4gICAgdDMgKj0gdDM7XG4gICAgbjMgPSB0MyAqIHQzICogZ2kzLmRvdDMoeDMsIHkzLCB6Myk7XG4gIH0gLy8gQWRkIGNvbnRyaWJ1dGlvbnMgZnJvbSBlYWNoIGNvcm5lciB0byBnZXQgdGhlIGZpbmFsIG5vaXNlIHZhbHVlLlxuICAvLyBUaGUgcmVzdWx0IGlzIHNjYWxlZCB0byByZXR1cm4gdmFsdWVzIGluIHRoZSBpbnRlcnZhbCBbLTEsMV0uXG5cblxuICByZXR1cm4gMzIgKiAobjAgKyBuMSArIG4yICsgbjMpO1xufTsgLy8gIyMjIyMgUGVybGluIG5vaXNlIHN0dWZmXG4vLyAyRCBQZXJsaW4gTm9pc2VcblxudmFyIHBlcmxpbjIgPSBmdW5jdGlvbiBwZXJsaW4yKHgsIHkpIHtcbiAgLy8gRmluZCB1bml0IGdyaWQgY2VsbCBjb250YWluaW5nIHBvaW50XG4gIHZhciBYID0gTWF0aC5mbG9vcih4KSxcbiAgICAgIFkgPSBNYXRoLmZsb29yKHkpOyAvLyBHZXQgcmVsYXRpdmUgeHkgY29vcmRpbmF0ZXMgb2YgcG9pbnQgd2l0aGluIHRoYXQgY2VsbFxuXG4gIHggPSB4IC0gWDtcbiAgeSA9IHkgLSBZOyAvLyBXcmFwIHRoZSBpbnRlZ2VyIGNlbGxzIGF0IDI1NSAoc21hbGxlciBpbnRlZ2VyIHBlcmlvZCBjYW4gYmUgaW50cm9kdWNlZCBoZXJlKVxuXG4gIFggPSBYICYgMjU1O1xuICBZID0gWSAmIDI1NTsgLy8gQ2FsY3VsYXRlIG5vaXNlIGNvbnRyaWJ1dGlvbnMgZnJvbSBlYWNoIG9mIHRoZSBmb3VyIGNvcm5lcnNcblxuICB2YXIgbjAwID0gZ3JhZFBbWCArIHBlcm1bWV1dLmRvdDIoeCwgeSk7XG4gIHZhciBuMDEgPSBncmFkUFtYICsgcGVybVtZICsgMV1dLmRvdDIoeCwgeSAtIDEpO1xuICB2YXIgbjEwID0gZ3JhZFBbWCArIDEgKyBwZXJtW1ldXS5kb3QyKHggLSAxLCB5KTtcbiAgdmFyIG4xMSA9IGdyYWRQW1ggKyAxICsgcGVybVtZICsgMV1dLmRvdDIoeCAtIDEsIHkgLSAxKTsgLy8gQ29tcHV0ZSB0aGUgZmFkZSBjdXJ2ZSB2YWx1ZSBmb3IgeFxuXG4gIHZhciB1ID0gbWlzY19kaXN0X21hYXRoTWlzYy5mYWRlKHgpOyAvLyBJbnRlcnBvbGF0ZSB0aGUgZm91ciByZXN1bHRzXG5cbiAgcmV0dXJuIG1pc2NfZGlzdF9tYWF0aE1pc2MubGVycChtaXNjX2Rpc3RfbWFhdGhNaXNjLmxlcnAobjAwLCBuMTAsIHUpLCBtaXNjX2Rpc3RfbWFhdGhNaXNjLmxlcnAobjAxLCBuMTEsIHUpLCBtaXNjX2Rpc3RfbWFhdGhNaXNjLmZhZGUoeSkpO1xufTsgLy8gM0QgUGVybGluIE5vaXNlXG5cbnZhciBwZXJsaW4zID0gZnVuY3Rpb24gcGVybGluMyh4LCB5LCB6KSB7XG4gIC8vIEZpbmQgdW5pdCBncmlkIGNlbGwgY29udGFpbmluZyBwb2ludFxuICB2YXIgWCA9IE1hdGguZmxvb3IoeCksXG4gICAgICBZID0gTWF0aC5mbG9vcih5KSxcbiAgICAgIFogPSBNYXRoLmZsb29yKHopOyAvLyBHZXQgcmVsYXRpdmUgeHl6IGNvb3JkaW5hdGVzIG9mIHBvaW50IHdpdGhpbiB0aGF0IGNlbGxcblxuICB4ID0geCAtIFg7XG4gIHkgPSB5IC0gWTtcbiAgeiA9IHogLSBaOyAvLyBXcmFwIHRoZSBpbnRlZ2VyIGNlbGxzIGF0IDI1NSAoc21hbGxlciBpbnRlZ2VyIHBlcmlvZCBjYW4gYmUgaW50cm9kdWNlZCBoZXJlKVxuXG4gIFggPSBYICYgMjU1O1xuICBZID0gWSAmIDI1NTtcbiAgWiA9IFogJiAyNTU7IC8vIENhbGN1bGF0ZSBub2lzZSBjb250cmlidXRpb25zIGZyb20gZWFjaCBvZiB0aGUgZWlnaHQgY29ybmVyc1xuXG4gIHZhciBuMDAwID0gZ3JhZFBbWCArIHBlcm1bWSArIHBlcm1bWl1dXS5kb3QzKHgsIHksIHopO1xuICB2YXIgbjAwMSA9IGdyYWRQW1ggKyBwZXJtW1kgKyBwZXJtW1ogKyAxXV1dLmRvdDMoeCwgeSwgeiAtIDEpO1xuICB2YXIgbjAxMCA9IGdyYWRQW1ggKyBwZXJtW1kgKyAxICsgcGVybVtaXV1dLmRvdDMoeCwgeSAtIDEsIHopO1xuICB2YXIgbjAxMSA9IGdyYWRQW1ggKyBwZXJtW1kgKyAxICsgcGVybVtaICsgMV1dXS5kb3QzKHgsIHkgLSAxLCB6IC0gMSk7XG4gIHZhciBuMTAwID0gZ3JhZFBbWCArIDEgKyBwZXJtW1kgKyBwZXJtW1pdXV0uZG90Myh4IC0gMSwgeSwgeik7XG4gIHZhciBuMTAxID0gZ3JhZFBbWCArIDEgKyBwZXJtW1kgKyBwZXJtW1ogKyAxXV1dLmRvdDMoeCAtIDEsIHksIHogLSAxKTtcbiAgdmFyIG4xMTAgPSBncmFkUFtYICsgMSArIHBlcm1bWSArIDEgKyBwZXJtW1pdXV0uZG90Myh4IC0gMSwgeSAtIDEsIHopO1xuICB2YXIgbjExMSA9IGdyYWRQW1ggKyAxICsgcGVybVtZICsgMSArIHBlcm1bWiArIDFdXV0uZG90Myh4IC0gMSwgeSAtIDEsIHogLSAxKTsgLy8gQ29tcHV0ZSB0aGUgZmFkZSBjdXJ2ZSB2YWx1ZSBmb3IgeCwgeSwgelxuXG4gIHZhciB1ID0gbWlzY19kaXN0X21hYXRoTWlzYy5mYWRlKHgpO1xuICB2YXIgdiA9IG1pc2NfZGlzdF9tYWF0aE1pc2MuZmFkZSh5KTtcbiAgdmFyIHcgPSBtaXNjX2Rpc3RfbWFhdGhNaXNjLmZhZGUoeik7IC8vIEludGVycG9sYXRlXG5cbiAgcmV0dXJuIG1pc2NfZGlzdF9tYWF0aE1pc2MubGVycChtaXNjX2Rpc3RfbWFhdGhNaXNjLmxlcnAobWlzY19kaXN0X21hYXRoTWlzYy5sZXJwKG4wMDAsIG4xMDAsIHUpLCBtaXNjX2Rpc3RfbWFhdGhNaXNjLmxlcnAobjAwMSwgbjEwMSwgdSksIHcpLCBtaXNjX2Rpc3RfbWFhdGhNaXNjLmxlcnAobWlzY19kaXN0X21hYXRoTWlzYy5sZXJwKG4wMTAsIG4xMTAsIHUpLCBtaXNjX2Rpc3RfbWFhdGhNaXNjLmxlcnAobjAxMSwgbjExMSwgdSksIHcpLCB2KTtcbn07XG5cbnZhciBub2lzZSA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBzZWVkOiBzZWVkLFxuICBzaW1wbGV4Mjogc2ltcGxleDIsXG4gIHNpbXBsZXgzOiBzaW1wbGV4MyxcbiAgcGVybGluMjogcGVybGluMixcbiAgcGVybGluMzogcGVybGluM1xufSk7XG5cbnZhciBUQVUgPSBNYXRoLlBJICogMjsgLy8gQ3JlZGl0cyBAa2NoYXBlbGllciBodHRwczovL2dpdGh1Yi5jb20va2NoYXBlbGllci93YXZlZnVuY3Rpb25jb2xsYXBzZS9ibG9iL21hc3Rlci9leGFtcGxlL2xjZy5qcyNMMjItTDMwXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVNlZWQoc2VlZCkge1xuICBpZiAodHlwZW9mIHNlZWQgPT09IFwibnVtYmVyXCIpIHtcbiAgICBzZWVkID0gTWF0aC5hYnMoc2VlZCk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHNlZWQgPT09IFwic3RyaW5nXCIpIHtcbiAgICB2YXIgc3RyaW5nID0gc2VlZDtcbiAgICBzZWVkID0gMDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nLmxlbmd0aDsgaSsrKSB7XG4gICAgICBzZWVkID0gKHNlZWQgKyAoaSArIDEpICogKHN0cmluZy5jaGFyQ29kZUF0KGkpICUgOTYpKSAlIDIxNDc0ODM2NDc7XG4gICAgfVxuICB9XG5cbiAgaWYgKHNlZWQgPT09IDApIHtcbiAgICBzZWVkID0gMzExO1xuICB9XG5cbiAgcmV0dXJuIHNlZWQ7XG59XG5cbmZ1bmN0aW9uIGxjZ1JhbmRvbShzZWVkKSB7XG4gIHZhciBzdGF0ZSA9IG5vcm1hbGl6ZVNlZWQoc2VlZCk7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlc3VsdCA9IHN0YXRlICogNDgyNzEgJSAyMTQ3NDgzNjQ3O1xuICAgIHN0YXRlID0gcmVzdWx0O1xuICAgIHJldHVybiByZXN1bHQgLyAyMTQ3NDgzNjQ3O1xuICB9O1xufVxuXG52YXIgR2VuZXJhdG9yID0gZnVuY3Rpb24gR2VuZXJhdG9yKF9zZWVkKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgY2xhc3NDYWxsQ2hlY2suX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEdlbmVyYXRvcik7XG5cbiAgb2JqZWN0U3ByZWFkMi5fZGVmaW5lUHJvcGVydHkodGhpcywgXCJzZWVkXCIsIDApO1xuXG4gIG9iamVjdFNwcmVhZDIuX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5pdFwiLCBmdW5jdGlvbiAoc2VlZCkge1xuICAgIF90aGlzLnNlZWQgPSBzZWVkO1xuICAgIF90aGlzLnZhbHVlID0gbGNnUmFuZG9tKHNlZWQpO1xuICB9KTtcblxuICBvYmplY3RTcHJlYWQyLl9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInZhbHVlXCIsIGxjZ1JhbmRvbSh0aGlzLnNlZWQpKTtcblxuICB0aGlzLmluaXQoX3NlZWQpO1xufTtcbnZhciBkZWZhdWx0R2VuID0gbmV3IEdlbmVyYXRvcihNYXRoLnJhbmRvbSgpKTtcbi8qKipcbiAqIFszRF0gU3BoZXJlXG4gKi9cblxudmFyIGRlZmF1bHRTcGhlcmUgPSB7XG4gIHJhZGl1czogMSxcbiAgY2VudGVyOiBbMCwgMCwgMF1cbn07IC8vIHJhbmRvbSBvbiBzdXJmYWNlIG9mIHNwaGVyZVxuLy8gLSBodHRwczovL3R3aXR0ZXIuY29tL2Zlcm1hdHNsaWJyYXJ5L3N0YXR1cy8xNDMwOTMyNTAzNTc4MjI2Njg4XG4vLyAtIGh0dHBzOi8vbWF0aHdvcmxkLndvbGZyYW0uY29tL1NwaGVyZVBvaW50UGlja2luZy5odG1sXG5cbmZ1bmN0aW9uIG9uU3BoZXJlKGJ1ZmZlciwgc3BoZXJlKSB7XG4gIHZhciBybmcgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGRlZmF1bHRHZW47XG5cbiAgdmFyIF9kZWZhdWx0U3BoZXJlJHNwaGVyZSA9IG9iamVjdFNwcmVhZDIuX29iamVjdFNwcmVhZDIob2JqZWN0U3ByZWFkMi5fb2JqZWN0U3ByZWFkMih7fSwgZGVmYXVsdFNwaGVyZSksIHNwaGVyZSksXG4gICAgICByYWRpdXMgPSBfZGVmYXVsdFNwaGVyZSRzcGhlcmUucmFkaXVzLFxuICAgICAgY2VudGVyID0gX2RlZmF1bHRTcGhlcmUkc3BoZXJlLmNlbnRlcjtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ1ZmZlci5sZW5ndGg7IGkgKz0gMykge1xuICAgIHZhciB1ID0gcm5nLnZhbHVlKCk7XG4gICAgdmFyIHYgPSBybmcudmFsdWUoKTtcbiAgICB2YXIgdGhldGEgPSBNYXRoLmFjb3MoMiAqIHYgLSAxKTtcbiAgICB2YXIgcGhpID0gVEFVICogdTtcbiAgICBidWZmZXJbaV0gPSBNYXRoLnNpbih0aGV0YSkgKiBNYXRoLmNvcyhwaGkpICogcmFkaXVzICsgY2VudGVyWzBdO1xuICAgIGJ1ZmZlcltpICsgMV0gPSBNYXRoLnNpbih0aGV0YSkgKiBNYXRoLnNpbihwaGkpICogcmFkaXVzICsgY2VudGVyWzFdO1xuICAgIGJ1ZmZlcltpICsgMl0gPSBNYXRoLmNvcyh0aGV0YSkgKiByYWRpdXMgKyBjZW50ZXJbMl07XG4gIH1cblxuICByZXR1cm4gYnVmZmVyO1xufSAvLyBmcm9tIFwiQW5vdGhlciBNZXRob2RcIiBodHRwczovL2RhdGFnZW5ldGljcy5jb20vYmxvZy9qYW51YXJ5MzIwMjAvaW5kZXguaHRtbFxuXG5mdW5jdGlvbiBpblNwaGVyZShidWZmZXIsIHNwaGVyZSkge1xuICB2YXIgcm5nID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBkZWZhdWx0R2VuO1xuXG4gIHZhciBfZGVmYXVsdFNwaGVyZSRzcGhlcmUyID0gb2JqZWN0U3ByZWFkMi5fb2JqZWN0U3ByZWFkMihvYmplY3RTcHJlYWQyLl9vYmplY3RTcHJlYWQyKHt9LCBkZWZhdWx0U3BoZXJlKSwgc3BoZXJlKSxcbiAgICAgIHJhZGl1cyA9IF9kZWZhdWx0U3BoZXJlJHNwaGVyZTIucmFkaXVzLFxuICAgICAgY2VudGVyID0gX2RlZmF1bHRTcGhlcmUkc3BoZXJlMi5jZW50ZXI7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWZmZXIubGVuZ3RoOyBpICs9IDMpIHtcbiAgICB2YXIgdSA9IE1hdGgucG93KHJuZy52YWx1ZSgpLCAxIC8gMyk7XG4gICAgdmFyIHggPSBybmcudmFsdWUoKSAqIDIgLSAxO1xuICAgIHZhciB5ID0gcm5nLnZhbHVlKCkgKiAyIC0gMTtcbiAgICB2YXIgeiA9IHJuZy52YWx1ZSgpICogMiAtIDE7XG4gICAgdmFyIG1hZyA9IE1hdGguc3FydCh4ICogeCArIHkgKiB5ICsgeiAqIHopO1xuICAgIHggPSB1ICogeCAvIG1hZztcbiAgICB5ID0gdSAqIHkgLyBtYWc7XG4gICAgeiA9IHUgKiB6IC8gbWFnO1xuICAgIGJ1ZmZlcltpXSA9IHggKiByYWRpdXMgKyBjZW50ZXJbMF07XG4gICAgYnVmZmVyW2kgKyAxXSA9IHkgKiByYWRpdXMgKyBjZW50ZXJbMV07XG4gICAgYnVmZmVyW2kgKyAyXSA9IHogKiByYWRpdXMgKyBjZW50ZXJbMl07XG4gIH1cblxuICByZXR1cm4gYnVmZmVyO1xufVxuLyoqKlxuICogWzJEXSBDaXJjbGVcbiAqL1xuXG52YXIgZGVmYXVsdENpcmNsZSA9IHtcbiAgcmFkaXVzOiAxLFxuICBjZW50ZXI6IFswLCAwXVxufTsgLy8gcmFuZG9tIGNpcmNsZSBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNTA3NDY0MDlcblxuZnVuY3Rpb24gaW5DaXJjbGUoYnVmZmVyLCBjaXJjbGUpIHtcbiAgdmFyIHJuZyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZGVmYXVsdEdlbjtcblxuICB2YXIgX2RlZmF1bHRDaXJjbGUkY2lyY2xlID0gb2JqZWN0U3ByZWFkMi5fb2JqZWN0U3ByZWFkMihvYmplY3RTcHJlYWQyLl9vYmplY3RTcHJlYWQyKHt9LCBkZWZhdWx0Q2lyY2xlKSwgY2lyY2xlKSxcbiAgICAgIHJhZGl1cyA9IF9kZWZhdWx0Q2lyY2xlJGNpcmNsZS5yYWRpdXMsXG4gICAgICBjZW50ZXIgPSBfZGVmYXVsdENpcmNsZSRjaXJjbGUuY2VudGVyO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYnVmZmVyLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgdmFyIHIgPSByYWRpdXMgKiBNYXRoLnNxcnQocm5nLnZhbHVlKCkpO1xuICAgIHZhciB0aGV0YSA9IHJuZy52YWx1ZSgpICogVEFVO1xuICAgIGJ1ZmZlcltpXSA9IE1hdGguc2luKHRoZXRhKSAqIHIgKyBjZW50ZXJbMF07XG4gICAgYnVmZmVyW2kgKyAxXSA9IE1hdGguY29zKHRoZXRhKSAqIHIgKyBjZW50ZXJbMV07XG4gIH1cblxuICByZXR1cm4gYnVmZmVyO1xufVxuZnVuY3Rpb24gb25DaXJjbGUoYnVmZmVyLCBjaXJjbGUpIHtcbiAgdmFyIHJuZyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZGVmYXVsdEdlbjtcblxuICB2YXIgX2RlZmF1bHRDaXJjbGUkY2lyY2xlMiA9IG9iamVjdFNwcmVhZDIuX29iamVjdFNwcmVhZDIob2JqZWN0U3ByZWFkMi5fb2JqZWN0U3ByZWFkMih7fSwgZGVmYXVsdENpcmNsZSksIGNpcmNsZSksXG4gICAgICByYWRpdXMgPSBfZGVmYXVsdENpcmNsZSRjaXJjbGUyLnJhZGl1cyxcbiAgICAgIGNlbnRlciA9IF9kZWZhdWx0Q2lyY2xlJGNpcmNsZTIuY2VudGVyO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYnVmZmVyLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgdmFyIHRoZXRhID0gcm5nLnZhbHVlKCkgKiBUQVU7XG4gICAgYnVmZmVyW2ldID0gTWF0aC5zaW4odGhldGEpICogcmFkaXVzICsgY2VudGVyWzBdO1xuICAgIGJ1ZmZlcltpICsgMV0gPSBNYXRoLmNvcyh0aGV0YSkgKiByYWRpdXMgKyBjZW50ZXJbMV07XG4gIH1cblxuICByZXR1cm4gYnVmZmVyO1xufVxuLyoqXG4gKiBbMkRdIFBsYW5lXG4gKi9cblxudmFyIGRlZmF1bHRSZWN0ID0ge1xuICBzaWRlczogMSxcbiAgY2VudGVyOiBbMCwgMF1cbn07XG5mdW5jdGlvbiBpblJlY3QoYnVmZmVyLCByZWN0KSB7XG4gIHZhciBybmcgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGRlZmF1bHRHZW47XG5cbiAgdmFyIF9kZWZhdWx0UmVjdCRyZWN0ID0gb2JqZWN0U3ByZWFkMi5fb2JqZWN0U3ByZWFkMihvYmplY3RTcHJlYWQyLl9vYmplY3RTcHJlYWQyKHt9LCBkZWZhdWx0UmVjdCksIHJlY3QpLFxuICAgICAgc2lkZXMgPSBfZGVmYXVsdFJlY3QkcmVjdC5zaWRlcyxcbiAgICAgIGNlbnRlciA9IF9kZWZhdWx0UmVjdCRyZWN0LmNlbnRlcjtcblxuICB2YXIgc2lkZVggPSB0eXBlb2Ygc2lkZXMgPT09IFwibnVtYmVyXCIgPyBzaWRlcyA6IHNpZGVzWzBdO1xuICB2YXIgc2lkZVkgPSB0eXBlb2Ygc2lkZXMgPT09IFwibnVtYmVyXCIgPyBzaWRlcyA6IHNpZGVzWzFdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYnVmZmVyLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgYnVmZmVyW2ldID0gKHJuZy52YWx1ZSgpIC0gMC41KSAqIHNpZGVYICsgY2VudGVyWzBdO1xuICAgIGJ1ZmZlcltpICsgMV0gPSAocm5nLnZhbHVlKCkgLSAwLjUpICogc2lkZVkgKyBjZW50ZXJbMV07XG4gIH1cblxuICByZXR1cm4gYnVmZmVyO1xufVxuZnVuY3Rpb24gb25SZWN0KGJ1ZmZlciwgcmVjdCkge1xuICByZXR1cm4gYnVmZmVyO1xufVxuLyoqKlxuICogWzNEXSBCb3hcbiAqL1xuXG5mdW5jdGlvbiBpbkJveChidWZmZXIsIGJveCkge1xuICB2YXIgcm5nID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBkZWZhdWx0R2VuO1xuXG4gIHZhciBfZGVmYXVsdEJveCRib3ggPSBvYmplY3RTcHJlYWQyLl9vYmplY3RTcHJlYWQyKG9iamVjdFNwcmVhZDIuX29iamVjdFNwcmVhZDIoe30sIGRlZmF1bHRCb3gpLCBib3gpLFxuICAgICAgc2lkZXMgPSBfZGVmYXVsdEJveCRib3guc2lkZXMsXG4gICAgICBjZW50ZXIgPSBfZGVmYXVsdEJveCRib3guY2VudGVyO1xuXG4gIHZhciBzaWRlWCA9IHR5cGVvZiBzaWRlcyA9PT0gXCJudW1iZXJcIiA/IHNpZGVzIDogc2lkZXNbMF07XG4gIHZhciBzaWRlWSA9IHR5cGVvZiBzaWRlcyA9PT0gXCJudW1iZXJcIiA/IHNpZGVzIDogc2lkZXNbMV07XG4gIHZhciBzaWRlWiA9IHR5cGVvZiBzaWRlcyA9PT0gXCJudW1iZXJcIiA/IHNpZGVzIDogc2lkZXNbMl07XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWZmZXIubGVuZ3RoOyBpICs9IDMpIHtcbiAgICBidWZmZXJbaV0gPSAocm5nLnZhbHVlKCkgLSAwLjUpICogc2lkZVggKyBjZW50ZXJbMF07XG4gICAgYnVmZmVyW2kgKyAxXSA9IChybmcudmFsdWUoKSAtIDAuNSkgKiBzaWRlWSArIGNlbnRlclsxXTtcbiAgICBidWZmZXJbaSArIDJdID0gKHJuZy52YWx1ZSgpIC0gMC41KSAqIHNpZGVaICsgY2VudGVyWzJdO1xuICB9XG5cbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cbnZhciBkZWZhdWx0Qm94ID0ge1xuICBzaWRlczogMSxcbiAgY2VudGVyOiBbMCwgMCwgMF1cbn07XG5mdW5jdGlvbiBvbkJveChidWZmZXIsIGJveCkge1xuICB2YXIgcm5nID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBkZWZhdWx0R2VuO1xuXG4gIHZhciBfZGVmYXVsdEJveCRib3gyID0gb2JqZWN0U3ByZWFkMi5fb2JqZWN0U3ByZWFkMihvYmplY3RTcHJlYWQyLl9vYmplY3RTcHJlYWQyKHt9LCBkZWZhdWx0Qm94KSwgYm94KSxcbiAgICAgIHNpZGVzID0gX2RlZmF1bHRCb3gkYm94Mi5zaWRlcyxcbiAgICAgIGNlbnRlciA9IF9kZWZhdWx0Qm94JGJveDIuY2VudGVyO1xuXG4gIHZhciBzaWRlWCA9IHR5cGVvZiBzaWRlcyA9PT0gXCJudW1iZXJcIiA/IHNpZGVzIDogc2lkZXNbMF07XG4gIHZhciBzaWRlWSA9IHR5cGVvZiBzaWRlcyA9PT0gXCJudW1iZXJcIiA/IHNpZGVzIDogc2lkZXNbMV07XG4gIHZhciBzaWRlWiA9IHR5cGVvZiBzaWRlcyA9PT0gXCJudW1iZXJcIiA/IHNpZGVzIDogc2lkZXNbMl07XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWZmZXIubGVuZ3RoOyBpICs9IDMpIHtcbiAgICBidWZmZXJbaV0gPSAocm5nLnZhbHVlKCkgLSAwLjUpICogc2lkZVggKyBjZW50ZXJbMF07XG4gICAgYnVmZmVyW2kgKyAxXSA9IChybmcudmFsdWUoKSAtIDAuNSkgKiBzaWRlWSArIGNlbnRlclsxXTtcbiAgICBidWZmZXJbaSArIDJdID0gKHJuZy52YWx1ZSgpIC0gMC41KSAqIHNpZGVaICsgY2VudGVyWzJdO1xuICB9XG5cbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cblxudmFyIGluZGV4ID0gLyojX19QVVJFX18qL09iamVjdC5mcmVlemUoe1xuICBfX3Byb3RvX186IG51bGwsXG4gIEdlbmVyYXRvcjogR2VuZXJhdG9yLFxuICBvblNwaGVyZTogb25TcGhlcmUsXG4gIGluU3BoZXJlOiBpblNwaGVyZSxcbiAgaW5DaXJjbGU6IGluQ2lyY2xlLFxuICBvbkNpcmNsZTogb25DaXJjbGUsXG4gIGluUmVjdDogaW5SZWN0LFxuICBvblJlY3Q6IG9uUmVjdCxcbiAgaW5Cb3g6IGluQm94LFxuICBvbkJveDogb25Cb3gsXG4gIG5vaXNlOiBub2lzZVxufSk7XG5cbmV4cG9ydHMuR2VuZXJhdG9yID0gR2VuZXJhdG9yO1xuZXhwb3J0cy5pbkJveCA9IGluQm94O1xuZXhwb3J0cy5pbkNpcmNsZSA9IGluQ2lyY2xlO1xuZXhwb3J0cy5pblJlY3QgPSBpblJlY3Q7XG5leHBvcnRzLmluU3BoZXJlID0gaW5TcGhlcmU7XG5leHBvcnRzLmluZGV4ID0gaW5kZXg7XG5leHBvcnRzLm5vaXNlID0gbm9pc2U7XG5leHBvcnRzLm9uQm94ID0gb25Cb3g7XG5leHBvcnRzLm9uQ2lyY2xlID0gb25DaXJjbGU7XG5leHBvcnRzLm9uUmVjdCA9IG9uUmVjdDtcbmV4cG9ydHMub25TcGhlcmUgPSBvblNwaGVyZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/index-5afa9217.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-ddc4ebc1.cjs.dev.js":
/*!******************************************************************************!*\
  !*** ./node_modules/maath/dist/isNativeReflectConstruct-ddc4ebc1.cjs.dev.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexports._isNativeReflectConstruct = _isNativeReflectConstruct;\nexports._setPrototypeOf = _setPrototypeOf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QtZGRjNGViYzEuY2pzLmRldi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnRkFBZ0Y7QUFDaEY7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBLGlDQUFpQztBQUNqQyx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW50Y2FyLy4vbm9kZV9tb2R1bGVzL21hYXRoL2Rpc3QvaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LWRkYzRlYmMxLmNqcy5kZXYuanM/OGZkYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIG8uX19wcm90b19fID0gcDtcbiAgICByZXR1cm4gbztcbiAgfTtcblxuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkge1xuICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7XG5cbiAgdHJ5IHtcbiAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0cy5faXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdDtcbmV4cG9ydHMuX3NldFByb3RvdHlwZU9mID0gX3NldFByb3RvdHlwZU9mO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-ddc4ebc1.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/maath.cjs.dev.js":
/*!**************************************************!*\
  !*** ./node_modules/maath/dist/maath.cjs.dev.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar buffer_dist_maathBuffer = __webpack_require__(/*! ./buffer-6b4e8456.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/buffer-6b4e8456.cjs.dev.js\");\nvar random_dist_maathRandom = __webpack_require__(/*! ./index-5afa9217.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/index-5afa9217.cjs.dev.js\");\nvar easing_dist_maathEasing = __webpack_require__(/*! ./easing-5c3709fe.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/easing-5c3709fe.cjs.dev.js\");\nvar geometry_dist_maathGeometry = __webpack_require__(/*! ./geometry-0d5fe5bf.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/geometry-0d5fe5bf.cjs.dev.js\");\nvar matrix_dist_maathMatrix = __webpack_require__(/*! ./matrix-fb190f60.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/matrix-fb190f60.cjs.dev.js\");\nvar misc_dist_maathMisc = __webpack_require__(/*! ./misc-fce4d494.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/misc-fce4d494.cjs.dev.js\");\nvar three_dist_maathThree = __webpack_require__(/*! ./three-87cc244e.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/three-87cc244e.cjs.dev.js\");\nvar triangle_dist_maathTriangle = __webpack_require__(/*! ./triangle-33ffdfef.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/triangle-33ffdfef.cjs.dev.js\");\nvar vector2_dist_maathVector2 = __webpack_require__(/*! ./vector2-f44fd63e.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/vector2-f44fd63e.cjs.dev.js\");\nvar vector3_dist_maathVector3 = __webpack_require__(/*! ./vector3-5e723d1a.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/vector3-5e723d1a.cjs.dev.js\");\n__webpack_require__(/*! ./objectSpread2-32cd2c34.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/objectSpread2-32cd2c34.cjs.dev.js\");\n__webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\n__webpack_require__(/*! ./classCallCheck-eaf0efc7.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/classCallCheck-eaf0efc7.cjs.dev.js\");\n__webpack_require__(/*! ./isNativeReflectConstruct-ddc4ebc1.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-ddc4ebc1.cjs.dev.js\");\n\n\n\nexports.buffer = buffer_dist_maathBuffer.buffer;\nexports.random = random_dist_maathRandom.index;\nexports.easing = easing_dist_maathEasing.easing;\nexports.geometry = geometry_dist_maathGeometry.geometry;\nexports.matrix = matrix_dist_maathMatrix.matrix;\nexports.misc = misc_dist_maathMisc.misc;\nexports.three = three_dist_maathThree.three;\nexports.triangle = triangle_dist_maathTriangle.triangle;\nexports.vector2 = vector2_dist_maathVector2.vector2;\nexports.vector3 = vector3_dist_maathVector3.vector3;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9tYWF0aC5janMuZGV2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsOEJBQThCLG1CQUFPLENBQUMsZ0dBQThCO0FBQ3BFLDhCQUE4QixtQkFBTyxDQUFDLDhGQUE2QjtBQUNuRSw4QkFBOEIsbUJBQU8sQ0FBQyxnR0FBOEI7QUFDcEUsa0NBQWtDLG1CQUFPLENBQUMsb0dBQWdDO0FBQzFFLDhCQUE4QixtQkFBTyxDQUFDLGdHQUE4QjtBQUNwRSwwQkFBMEIsbUJBQU8sQ0FBQyw0RkFBNEI7QUFDOUQsNEJBQTRCLG1CQUFPLENBQUMsOEZBQTZCO0FBQ2pFLGtDQUFrQyxtQkFBTyxDQUFDLG9HQUFnQztBQUMxRSxnQ0FBZ0MsbUJBQU8sQ0FBQyxrR0FBK0I7QUFDdkUsZ0NBQWdDLG1CQUFPLENBQUMsa0dBQStCO0FBQ3ZFLG1CQUFPLENBQUMsOEdBQXFDO0FBQzdDLG1CQUFPLENBQUMseURBQU87QUFDZixtQkFBTyxDQUFDLGdIQUFzQztBQUM5QyxtQkFBTyxDQUFDLG9JQUFnRDs7OztBQUl4RCxjQUFjO0FBQ2QsY0FBYztBQUNkLGNBQWM7QUFDZCxnQkFBZ0I7QUFDaEIsY0FBYztBQUNkLFlBQVk7QUFDWixhQUFhO0FBQ2IsZ0JBQWdCO0FBQ2hCLGVBQWU7QUFDZixlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVudGNhci8uL25vZGVfbW9kdWxlcy9tYWF0aC9kaXN0L21hYXRoLmNqcy5kZXYuanM/ZjI4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbnZhciBidWZmZXJfZGlzdF9tYWF0aEJ1ZmZlciA9IHJlcXVpcmUoJy4vYnVmZmVyLTZiNGU4NDU2LmNqcy5kZXYuanMnKTtcbnZhciByYW5kb21fZGlzdF9tYWF0aFJhbmRvbSA9IHJlcXVpcmUoJy4vaW5kZXgtNWFmYTkyMTcuY2pzLmRldi5qcycpO1xudmFyIGVhc2luZ19kaXN0X21hYXRoRWFzaW5nID0gcmVxdWlyZSgnLi9lYXNpbmctNWMzNzA5ZmUuY2pzLmRldi5qcycpO1xudmFyIGdlb21ldHJ5X2Rpc3RfbWFhdGhHZW9tZXRyeSA9IHJlcXVpcmUoJy4vZ2VvbWV0cnktMGQ1ZmU1YmYuY2pzLmRldi5qcycpO1xudmFyIG1hdHJpeF9kaXN0X21hYXRoTWF0cml4ID0gcmVxdWlyZSgnLi9tYXRyaXgtZmIxOTBmNjAuY2pzLmRldi5qcycpO1xudmFyIG1pc2NfZGlzdF9tYWF0aE1pc2MgPSByZXF1aXJlKCcuL21pc2MtZmNlNGQ0OTQuY2pzLmRldi5qcycpO1xudmFyIHRocmVlX2Rpc3RfbWFhdGhUaHJlZSA9IHJlcXVpcmUoJy4vdGhyZWUtODdjYzI0NGUuY2pzLmRldi5qcycpO1xudmFyIHRyaWFuZ2xlX2Rpc3RfbWFhdGhUcmlhbmdsZSA9IHJlcXVpcmUoJy4vdHJpYW5nbGUtMzNmZmRmZWYuY2pzLmRldi5qcycpO1xudmFyIHZlY3RvcjJfZGlzdF9tYWF0aFZlY3RvcjIgPSByZXF1aXJlKCcuL3ZlY3RvcjItZjQ0ZmQ2M2UuY2pzLmRldi5qcycpO1xudmFyIHZlY3RvcjNfZGlzdF9tYWF0aFZlY3RvcjMgPSByZXF1aXJlKCcuL3ZlY3RvcjMtNWU3MjNkMWEuY2pzLmRldi5qcycpO1xucmVxdWlyZSgnLi9vYmplY3RTcHJlYWQyLTMyY2QyYzM0LmNqcy5kZXYuanMnKTtcbnJlcXVpcmUoJ3RocmVlJyk7XG5yZXF1aXJlKCcuL2NsYXNzQ2FsbENoZWNrLWVhZjBlZmM3LmNqcy5kZXYuanMnKTtcbnJlcXVpcmUoJy4vaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LWRkYzRlYmMxLmNqcy5kZXYuanMnKTtcblxuXG5cbmV4cG9ydHMuYnVmZmVyID0gYnVmZmVyX2Rpc3RfbWFhdGhCdWZmZXIuYnVmZmVyO1xuZXhwb3J0cy5yYW5kb20gPSByYW5kb21fZGlzdF9tYWF0aFJhbmRvbS5pbmRleDtcbmV4cG9ydHMuZWFzaW5nID0gZWFzaW5nX2Rpc3RfbWFhdGhFYXNpbmcuZWFzaW5nO1xuZXhwb3J0cy5nZW9tZXRyeSA9IGdlb21ldHJ5X2Rpc3RfbWFhdGhHZW9tZXRyeS5nZW9tZXRyeTtcbmV4cG9ydHMubWF0cml4ID0gbWF0cml4X2Rpc3RfbWFhdGhNYXRyaXgubWF0cml4O1xuZXhwb3J0cy5taXNjID0gbWlzY19kaXN0X21hYXRoTWlzYy5taXNjO1xuZXhwb3J0cy50aHJlZSA9IHRocmVlX2Rpc3RfbWFhdGhUaHJlZS50aHJlZTtcbmV4cG9ydHMudHJpYW5nbGUgPSB0cmlhbmdsZV9kaXN0X21hYXRoVHJpYW5nbGUudHJpYW5nbGU7XG5leHBvcnRzLnZlY3RvcjIgPSB2ZWN0b3IyX2Rpc3RfbWFhdGhWZWN0b3IyLnZlY3RvcjI7XG5leHBvcnRzLnZlY3RvcjMgPSB2ZWN0b3IzX2Rpc3RfbWFhdGhWZWN0b3IzLnZlY3RvcjM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/maath.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/maath.cjs.js":
/*!**********************************************!*\
  !*** ./node_modules/maath/dist/maath.cjs.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./maath.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/maath.cjs.dev.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9tYWF0aC5janMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLGtIQUE4QztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbnRjYXIvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9tYWF0aC5janMuanM/N2YyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9tYWF0aC5janMucHJvZC5qc1wiKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vbWFhdGguY2pzLmRldi5qc1wiKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/maath.cjs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/matrix-fb190f60.cjs.dev.js":
/*!************************************************************!*\
  !*** ./node_modules/maath/dist/matrix-fb190f60.cjs.dev.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\n\n/**\n *\n * @param terms\n *\n * | a b |\n * | c d |\n *\n * @returns {number} determinant\n */\n\nfunction determinant2() {\n  for (var _len = arguments.length, terms = new Array(_len), _key = 0; _key < _len; _key++) {\n    terms[_key] = arguments[_key];\n  }\n\n  var a = terms[0],\n      b = terms[1],\n      c = terms[2],\n      d = terms[3];\n  return a * d - b * c;\n}\n/**\n *\n * @param terms\n *\n * | a b c |\n * | d e f |\n * | g h i |\n *\n * @returns {number} determinant\n */\n\nfunction determinant3() {\n  for (var _len2 = arguments.length, terms = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    terms[_key2] = arguments[_key2];\n  }\n\n  var a = terms[0],\n      b = terms[1],\n      c = terms[2],\n      d = terms[3],\n      e = terms[4],\n      f = terms[5],\n      g = terms[6],\n      h = terms[7],\n      i = terms[8];\n  return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h;\n}\n/**\n *\n * @param terms\n *\n * | a b c g |\n * | h i j k |\n * | l m n o |\n *\n * @returns {number} determinant\n */\n\nfunction determinant4() {\n  for (var _len3 = arguments.length, terms = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    terms[_key3] = arguments[_key3];\n  }\n\n  terms[0];\n      terms[1];\n      terms[2];\n      terms[3];\n      terms[4];\n      terms[5];\n      terms[6];\n      terms[7];\n      terms[8];\n      terms[9];\n      terms[10];\n      terms[11];\n      terms[12];\n      terms[13];\n      terms[14]; // TODO\n}\n/**\n *\n * Get the determinant of matrix m without row r and col c\n *\n * @param {matrix} m Starter matrix\n * @param r row to remove\n * @param c col to remove\n *\n *     | a b c |\n * m = | d e f |\n *     | g h i |\n *\n * getMinor(m, 1, 1) would result in this determinant\n *\n * | a c |\n * | g i |\n *\n * @returns {number} determinant\n */\n\nfunction getMinor(matrix, r, c) {\n  var _matrixTranspose = matrix.clone().transpose();\n\n  var x = [];\n  var l = _matrixTranspose.elements.length;\n  var n = Math.sqrt(l);\n\n  for (var i = 0; i < l; i++) {\n    var element = _matrixTranspose.elements[i];\n    var row = Math.floor(i / n);\n    var col = i % n;\n\n    if (row !== r - 1 && col !== c - 1) {\n      x.push(element);\n    }\n  }\n\n  return determinant3.apply(void 0, x);\n}\n/**\n *\n */\n\nfunction matrixSum3(m1, m2) {\n  var sum = [];\n  var m1Array = m1.toArray();\n  var m2Array = m2.toArray();\n\n  for (var i = 0; i < m1Array.length; i++) {\n    sum[i] = m1Array[i] + m2Array[i];\n  }\n\n  return new THREE.Matrix3().fromArray(sum);\n}\n\nvar matrix = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  determinant2: determinant2,\n  determinant3: determinant3,\n  determinant4: determinant4,\n  getMinor: getMinor,\n  matrixSum3: matrixSum3\n});\n\nexports.determinant2 = determinant2;\nexports.determinant3 = determinant3;\nexports.determinant4 = determinant4;\nexports.getMinor = getMinor;\nexports.matrix = matrix;\nexports.matrixSum3 = matrixSum3;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9tYXRyaXgtZmIxOTBmNjAuY2pzLmRldi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMseURBQU87O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCOztBQUVBO0FBQ0EsdUVBQXVFLGFBQWE7QUFDcEY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCOztBQUVBO0FBQ0EsMEVBQTBFLGVBQWU7QUFDekY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjs7QUFFQTtBQUNBLDBFQUEwRSxlQUFlO0FBQ3pGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0Isb0JBQW9CO0FBQ3RDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsZ0JBQWdCO0FBQ2hCLGNBQWM7QUFDZCxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW50Y2FyLy4vbm9kZV9tb2R1bGVzL21hYXRoL2Rpc3QvbWF0cml4LWZiMTkwZjYwLmNqcy5kZXYuanM/MTI3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBUSFJFRSA9IHJlcXVpcmUoJ3RocmVlJyk7XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB0ZXJtc1xuICpcbiAqIHwgYSBiIHxcbiAqIHwgYyBkIHxcbiAqXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBkZXRlcm1pbmFudFxuICovXG5cbmZ1bmN0aW9uIGRldGVybWluYW50MigpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHRlcm1zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIHRlcm1zW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFyIGEgPSB0ZXJtc1swXSxcbiAgICAgIGIgPSB0ZXJtc1sxXSxcbiAgICAgIGMgPSB0ZXJtc1syXSxcbiAgICAgIGQgPSB0ZXJtc1szXTtcbiAgcmV0dXJuIGEgKiBkIC0gYiAqIGM7XG59XG4vKipcbiAqXG4gKiBAcGFyYW0gdGVybXNcbiAqXG4gKiB8IGEgYiBjIHxcbiAqIHwgZCBlIGYgfFxuICogfCBnIGggaSB8XG4gKlxuICogQHJldHVybnMge251bWJlcn0gZGV0ZXJtaW5hbnRcbiAqL1xuXG5mdW5jdGlvbiBkZXRlcm1pbmFudDMoKSB7XG4gIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgdGVybXMgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICB0ZXJtc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICB9XG5cbiAgdmFyIGEgPSB0ZXJtc1swXSxcbiAgICAgIGIgPSB0ZXJtc1sxXSxcbiAgICAgIGMgPSB0ZXJtc1syXSxcbiAgICAgIGQgPSB0ZXJtc1szXSxcbiAgICAgIGUgPSB0ZXJtc1s0XSxcbiAgICAgIGYgPSB0ZXJtc1s1XSxcbiAgICAgIGcgPSB0ZXJtc1s2XSxcbiAgICAgIGggPSB0ZXJtc1s3XSxcbiAgICAgIGkgPSB0ZXJtc1s4XTtcbiAgcmV0dXJuIGEgKiBlICogaSArIGIgKiBmICogZyArIGMgKiBkICogaCAtIGMgKiBlICogZyAtIGIgKiBkICogaSAtIGEgKiBmICogaDtcbn1cbi8qKlxuICpcbiAqIEBwYXJhbSB0ZXJtc1xuICpcbiAqIHwgYSBiIGMgZyB8XG4gKiB8IGggaSBqIGsgfFxuICogfCBsIG0gbiBvIHxcbiAqXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBkZXRlcm1pbmFudFxuICovXG5cbmZ1bmN0aW9uIGRldGVybWluYW50NCgpIHtcbiAgZm9yICh2YXIgX2xlbjMgPSBhcmd1bWVudHMubGVuZ3RoLCB0ZXJtcyA9IG5ldyBBcnJheShfbGVuMyksIF9rZXkzID0gMDsgX2tleTMgPCBfbGVuMzsgX2tleTMrKykge1xuICAgIHRlcm1zW19rZXkzXSA9IGFyZ3VtZW50c1tfa2V5M107XG4gIH1cblxuICB0ZXJtc1swXTtcbiAgICAgIHRlcm1zWzFdO1xuICAgICAgdGVybXNbMl07XG4gICAgICB0ZXJtc1szXTtcbiAgICAgIHRlcm1zWzRdO1xuICAgICAgdGVybXNbNV07XG4gICAgICB0ZXJtc1s2XTtcbiAgICAgIHRlcm1zWzddO1xuICAgICAgdGVybXNbOF07XG4gICAgICB0ZXJtc1s5XTtcbiAgICAgIHRlcm1zWzEwXTtcbiAgICAgIHRlcm1zWzExXTtcbiAgICAgIHRlcm1zWzEyXTtcbiAgICAgIHRlcm1zWzEzXTtcbiAgICAgIHRlcm1zWzE0XTsgLy8gVE9ET1xufVxuLyoqXG4gKlxuICogR2V0IHRoZSBkZXRlcm1pbmFudCBvZiBtYXRyaXggbSB3aXRob3V0IHJvdyByIGFuZCBjb2wgY1xuICpcbiAqIEBwYXJhbSB7bWF0cml4fSBtIFN0YXJ0ZXIgbWF0cml4XG4gKiBAcGFyYW0gciByb3cgdG8gcmVtb3ZlXG4gKiBAcGFyYW0gYyBjb2wgdG8gcmVtb3ZlXG4gKlxuICogICAgIHwgYSBiIGMgfFxuICogbSA9IHwgZCBlIGYgfFxuICogICAgIHwgZyBoIGkgfFxuICpcbiAqIGdldE1pbm9yKG0sIDEsIDEpIHdvdWxkIHJlc3VsdCBpbiB0aGlzIGRldGVybWluYW50XG4gKlxuICogfCBhIGMgfFxuICogfCBnIGkgfFxuICpcbiAqIEByZXR1cm5zIHtudW1iZXJ9IGRldGVybWluYW50XG4gKi9cblxuZnVuY3Rpb24gZ2V0TWlub3IobWF0cml4LCByLCBjKSB7XG4gIHZhciBfbWF0cml4VHJhbnNwb3NlID0gbWF0cml4LmNsb25lKCkudHJhbnNwb3NlKCk7XG5cbiAgdmFyIHggPSBbXTtcbiAgdmFyIGwgPSBfbWF0cml4VHJhbnNwb3NlLmVsZW1lbnRzLmxlbmd0aDtcbiAgdmFyIG4gPSBNYXRoLnNxcnQobCk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsOyBpKyspIHtcbiAgICB2YXIgZWxlbWVudCA9IF9tYXRyaXhUcmFuc3Bvc2UuZWxlbWVudHNbaV07XG4gICAgdmFyIHJvdyA9IE1hdGguZmxvb3IoaSAvIG4pO1xuICAgIHZhciBjb2wgPSBpICUgbjtcblxuICAgIGlmIChyb3cgIT09IHIgLSAxICYmIGNvbCAhPT0gYyAtIDEpIHtcbiAgICAgIHgucHVzaChlbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZGV0ZXJtaW5hbnQzLmFwcGx5KHZvaWQgMCwgeCk7XG59XG4vKipcbiAqXG4gKi9cblxuZnVuY3Rpb24gbWF0cml4U3VtMyhtMSwgbTIpIHtcbiAgdmFyIHN1bSA9IFtdO1xuICB2YXIgbTFBcnJheSA9IG0xLnRvQXJyYXkoKTtcbiAgdmFyIG0yQXJyYXkgPSBtMi50b0FycmF5KCk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtMUFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgc3VtW2ldID0gbTFBcnJheVtpXSArIG0yQXJyYXlbaV07XG4gIH1cblxuICByZXR1cm4gbmV3IFRIUkVFLk1hdHJpeDMoKS5mcm9tQXJyYXkoc3VtKTtcbn1cblxudmFyIG1hdHJpeCA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBkZXRlcm1pbmFudDI6IGRldGVybWluYW50MixcbiAgZGV0ZXJtaW5hbnQzOiBkZXRlcm1pbmFudDMsXG4gIGRldGVybWluYW50NDogZGV0ZXJtaW5hbnQ0LFxuICBnZXRNaW5vcjogZ2V0TWlub3IsXG4gIG1hdHJpeFN1bTM6IG1hdHJpeFN1bTNcbn0pO1xuXG5leHBvcnRzLmRldGVybWluYW50MiA9IGRldGVybWluYW50MjtcbmV4cG9ydHMuZGV0ZXJtaW5hbnQzID0gZGV0ZXJtaW5hbnQzO1xuZXhwb3J0cy5kZXRlcm1pbmFudDQgPSBkZXRlcm1pbmFudDQ7XG5leHBvcnRzLmdldE1pbm9yID0gZ2V0TWlub3I7XG5leHBvcnRzLm1hdHJpeCA9IG1hdHJpeDtcbmV4cG9ydHMubWF0cml4U3VtMyA9IG1hdHJpeFN1bTM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/matrix-fb190f60.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/misc-fce4d494.cjs.dev.js":
/*!**********************************************************!*\
  !*** ./node_modules/maath/dist/misc-fce4d494.cjs.dev.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar triangle_dist_maathTriangle = __webpack_require__(/*! ./triangle-33ffdfef.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/triangle-33ffdfef.cjs.dev.js\");\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\nvar matrix_dist_maathMatrix = __webpack_require__(/*! ./matrix-fb190f60.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/matrix-fb190f60.cjs.dev.js\");\n\n/**\n * Clamps a value between a range.\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n} // Loops the value t, so that it is never larger than length and never smaller than 0.\n\nfunction repeat(t, length) {\n  return clamp(t - Math.floor(t / length) * length, 0, length);\n} // Calculates the shortest difference between two given angles.\n\nfunction deltaAngle(current, target) {\n  var delta = repeat(target - current, Math.PI * 2);\n  if (delta > Math.PI) delta -= Math.PI * 2;\n  return delta;\n}\n/**\n * Converts degrees to radians.\n */\n\nfunction degToRad(degrees) {\n  return degrees / 180 * Math.PI;\n}\n/**\n * Converts radians to degrees.\n */\n\nfunction radToDeg(radians) {\n  return radians * 180 / Math.PI;\n} // adapted from https://gist.github.com/stephanbogner/a5f50548a06bec723dcb0991dcbb0856 by https://twitter.com/st_phan\n\nfunction fibonacciOnSphere(buffer, _ref) {\n  var _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 1 : _ref$radius;\n  var samples = buffer.length / 3;\n  var offset = 2 / samples;\n  var increment = Math.PI * (3 - 2.2360679775);\n\n  for (var i = 0; i < buffer.length; i += 3) {\n    var y = i * offset - 1 + offset / 2;\n    var distance = Math.sqrt(1 - Math.pow(y, 2));\n    var phi = i % samples * increment;\n    var x = Math.cos(phi) * distance;\n    var z = Math.sin(phi) * distance;\n    buffer[i] = x * radius;\n    buffer[i + 1] = y * radius;\n    buffer[i + 2] = z * radius;\n  }\n} // @ts-ignore\n\nfunction vectorEquals(a, b) {\n  var eps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.EPSILON;\n  return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n}\n/**\n * Sorts vectors in lexicographic order, works with both v2 and v3\n *\n *  Use as:\n *  const sorted = arrayOfVectors.sort(lexicographicOrder)\n */\n// https://en.wikipedia.org/wiki/Lexicographic_order\n\nfunction lexicographic(a, b) {\n  if (a.x === b.x) {\n    // do a check to see if points is 3D,\n    // in which case add y eq check and sort by z\n    if (typeof a.z !== \"undefined\") {\n      if (a.y === b.y) {\n        return a.z - b.z;\n      }\n    }\n\n    return a.y - b.y;\n  }\n\n  return a.x - b.x;\n}\n/**\n * Convex Hull\n *\n * Returns an array of 2D Vectors representing the convex hull of a set of 2D Vectors\n */\n\n/**\n * Calculate the convex hull of a set of points\n */\n\nfunction convexHull(_points) {\n  var points = _points.sort(lexicographic); // put p1 and p2 in a list lUpper with p1 as the first point\n\n\n  var lUpper = [points[0], points[1]]; // for i <- 3 to n\n\n  for (var i = 2; i < points.length; i++) {\n    lUpper.push(points[i]); // while lUpper contains more than 2 points and the last three points in lUpper do not make a right turn\n\n    while (lUpper.length > 2 && triangle_dist_maathTriangle.doThreePointsMakeARight(triangle_dist_maathTriangle._toConsumableArray(lUpper.slice(-3)))) {\n      // delete the middle of the last three points from lUpper\n      lUpper.splice(lUpper.length - 2, 1);\n    }\n  } // put pn and pn-1 in a list lLower with pn as the first point\n\n\n  var lLower = [points[points.length - 1], points[points.length - 2]]; // for (i <- n - 2 downto 1)\n\n  for (var _i = points.length - 3; _i >= 0; _i--) {\n    // append pi to lLower\n    lLower.push(points[_i]); // while lLower contains more than 2 points and the last three points in lLower do not make a right turn\n\n    while (lLower.length > 2 && triangle_dist_maathTriangle.doThreePointsMakeARight(triangle_dist_maathTriangle._toConsumableArray(lLower.slice(-3)))) {\n      // delete the middle of the last three points from lLower\n      lLower.splice(lLower.length - 2, 1);\n    }\n  } // remove the first and last point from lLower to avoid duplication of the points where the upper and lower hull meet\n\n\n  lLower.splice(0, 1);\n  lLower.splice(lLower.length - 1, 1); // prettier-ignore\n\n  var c = [].concat(lUpper, lLower);\n  return c;\n}\nfunction remap(x, _ref2, _ref3) {\n  var _ref4 = triangle_dist_maathTriangle._slicedToArray(_ref2, 2),\n      low1 = _ref4[0],\n      high1 = _ref4[1];\n\n  var _ref5 = triangle_dist_maathTriangle._slicedToArray(_ref3, 2),\n      low2 = _ref5[0],\n      high2 = _ref5[1];\n\n  return low2 + (x - low1) * (high2 - low2) / (high1 - low1);\n}\n/**\n *\n * https://www.desmos.com/calculator/vsnmlaljdu\n *\n * Ease-in-out, goes to -Infinite before 0 and Infinite after 1\n *\n * @param t\n * @returns\n */\n\nfunction fade(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\n/**\n *\n * Returns the result of linearly interpolating between input A and input B by input T.\n *\n * @param v0\n * @param v1\n * @param t\n * @returns\n */\n\nfunction lerp(v0, v1, t) {\n  return v0 * (1 - t) + v1 * t;\n}\n/**\n *\n * Returns the linear parameter that produces the interpolant specified by input T within the range of input A to input B.\n *\n * @param v0\n * @param v1\n * @param t\n * @returns\n */\n\nfunction inverseLerp(v0, v1, t) {\n  return (t - v0) / (v1 - v0);\n}\n/**\n *\n */\n\nfunction normalize(x, y, z) {\n  var m = Math.sqrt(x * x + y * y + z * z);\n  return [x / m, y / m, z / m];\n}\n/**\n *\n */\n\nfunction pointOnCubeToPointOnSphere(x, y, z) {\n  var x2 = x * x;\n  var y2 = y * y;\n  var z2 = z * z;\n  var nx = x * Math.sqrt(1 - (y2 + z2) / 2 + y2 * z2 / 3);\n  var ny = y * Math.sqrt(1 - (z2 + x2) / 2 + z2 * x2 / 3);\n  var nz = z * Math.sqrt(1 - (x2 + y2) / 2 + x2 * y2 / 3);\n  return [nx, ny, nz];\n} // https://math.stackexchange.com/questions/180418/calculate-rotation-matrix-to-align-vector-a-to-vector-b-in-3d\n\n/**\n * Give two unit vectors a and b, returns the transformation matrix that rotates a onto b.\n *\n * */\n\nfunction rotateVectorOnVector(a, b) {\n  var v = new THREE.Vector3().crossVectors(a, b);\n  var c = a.dot(b);\n  var i = new THREE.Matrix3().identity(); //  skew-symmetric cross-product matrix of 𝑣 https://en.wikipedia.org/wiki/Skew-symmetric_matrix\n  // prettier-ignore\n\n  var vx = new THREE.Matrix3().set(0, -v.z, v.y, v.z, 0, -v.x, -v.y, v.x, 0);\n  var vxsquared = new THREE.Matrix3().multiplyMatrices(vx, vx).multiplyScalar(1 / (1 + c));\n\n  var _final = matrix_dist_maathMatrix.matrixSum3(matrix_dist_maathMatrix.matrixSum3(i, vx), vxsquared);\n\n  return _final;\n} // calculate latitude and longitude (in radians) from point on unit sphere\n\nfunction pointToCoordinate(x, y, z) {\n  var lat = Math.asin(y);\n  var lon = Math.atan2(x, -z);\n  return [lat, lon];\n} // calculate point on unit sphere given latitude and logitude in radians\n\nfunction coordinateToPoint(lat, lon) {\n  var y = Math.sin(lat);\n  var r = Math.cos(lat);\n  var x = Math.sin(lon) * r;\n  var z = -Math.cos(lon) * r;\n  return [x, y, z];\n}\n/**\n * Given a plane and a segment, return the intersection point if it exists or null it doesn't.\n */\n\nfunction planeSegmentIntersection(plane, segment) {\n  var _segment = triangle_dist_maathTriangle._slicedToArray(segment, 2),\n      a = _segment[0],\n      b = _segment[1];\n\n  var matrix = rotateVectorOnVector(plane.normal, new THREE.Vector3(0, 1, 0));\n  var t = inverseLerp(a.clone().applyMatrix3(matrix).y, b.clone().applyMatrix3(matrix).y, 0);\n  return new THREE.Vector3().lerpVectors(a, b, t);\n}\n/**\n * Given a plane and a point, return the distance.\n */\n\nfunction pointToPlaneDistance(p, plane) {\n  var d = plane.normal.dot(p); // TODO\n\n  return d;\n}\nfunction getIndexFrom3D(coords, sides) {\n  var _coords = triangle_dist_maathTriangle._slicedToArray(coords, 3),\n      ix = _coords[0],\n      iy = _coords[1],\n      iz = _coords[2];\n\n  var _sides = triangle_dist_maathTriangle._slicedToArray(sides, 2),\n      rx = _sides[0],\n      ry = _sides[1];\n\n  return iz * rx * ry + iy * rx + ix;\n}\nfunction get3DFromIndex(index, size) {\n  var _size = triangle_dist_maathTriangle._slicedToArray(size, 2),\n      rx = _size[0],\n      ry = _size[1];\n\n  var a = rx * ry;\n  var z = index / a;\n  var b = index - a * z;\n  var y = b / rx;\n  var x = b % rx;\n  return [x, y, z];\n}\nfunction getIndexFrom2D(coords, size) {\n  return coords[0] + size[0] * coords[1];\n}\nfunction get2DFromIndex(index, columns) {\n  var x = index % columns;\n  var y = Math.floor(index / columns);\n  return [x, y];\n}\n\nvar misc = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp,\n  repeat: repeat,\n  deltaAngle: deltaAngle,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  fibonacciOnSphere: fibonacciOnSphere,\n  vectorEquals: vectorEquals,\n  lexicographic: lexicographic,\n  convexHull: convexHull,\n  remap: remap,\n  fade: fade,\n  lerp: lerp,\n  inverseLerp: inverseLerp,\n  normalize: normalize,\n  pointOnCubeToPointOnSphere: pointOnCubeToPointOnSphere,\n  rotateVectorOnVector: rotateVectorOnVector,\n  pointToCoordinate: pointToCoordinate,\n  coordinateToPoint: coordinateToPoint,\n  planeSegmentIntersection: planeSegmentIntersection,\n  pointToPlaneDistance: pointToPlaneDistance,\n  getIndexFrom3D: getIndexFrom3D,\n  get3DFromIndex: get3DFromIndex,\n  getIndexFrom2D: getIndexFrom2D,\n  get2DFromIndex: get2DFromIndex\n});\n\nexports.clamp = clamp;\nexports.convexHull = convexHull;\nexports.coordinateToPoint = coordinateToPoint;\nexports.degToRad = degToRad;\nexports.deltaAngle = deltaAngle;\nexports.fade = fade;\nexports.fibonacciOnSphere = fibonacciOnSphere;\nexports.get2DFromIndex = get2DFromIndex;\nexports.get3DFromIndex = get3DFromIndex;\nexports.getIndexFrom2D = getIndexFrom2D;\nexports.getIndexFrom3D = getIndexFrom3D;\nexports.inverseLerp = inverseLerp;\nexports.lerp = lerp;\nexports.lexicographic = lexicographic;\nexports.misc = misc;\nexports.normalize = normalize;\nexports.planeSegmentIntersection = planeSegmentIntersection;\nexports.pointOnCubeToPointOnSphere = pointOnCubeToPointOnSphere;\nexports.pointToCoordinate = pointToCoordinate;\nexports.pointToPlaneDistance = pointToPlaneDistance;\nexports.radToDeg = radToDeg;\nexports.remap = remap;\nexports.repeat = repeat;\nexports.rotateVectorOnVector = rotateVectorOnVector;\nexports.vectorEquals = vectorEquals;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/misc-fce4d494.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/objectSpread2-32cd2c34.cjs.dev.js":
/*!*******************************************************************!*\
  !*** ./node_modules/maath/dist/objectSpread2-32cd2c34.cjs.dev.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nexports._defineProperty = _defineProperty;\nexports._objectSpread2 = _objectSpread2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9vYmplY3RTcHJlYWQyLTMyY2QyYzM0LmNqcy5kZXYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQixzQkFBc0I7QUFDeEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1QkFBdUI7QUFDdkIsc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVudGNhci8uL25vZGVfbW9kdWxlcy9tYWF0aC9kaXN0L29iamVjdFNwcmVhZDItMzJjZDJjMzQuY2pzLmRldi5qcz8yYTViIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkge1xuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTtcblxuICAgIGlmIChlbnVtZXJhYmxlT25seSkge1xuICAgICAgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7XG4gIH1cblxuICByZXR1cm4ga2V5cztcbn1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZDIodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG5cbiAgICBpZiAoaSAlIDIpIHtcbiAgICAgIG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmV4cG9ydHMuX2RlZmluZVByb3BlcnR5ID0gX2RlZmluZVByb3BlcnR5O1xuZXhwb3J0cy5fb2JqZWN0U3ByZWFkMiA9IF9vYmplY3RTcHJlYWQyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/objectSpread2-32cd2c34.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/three-87cc244e.cjs.dev.js":
/*!***********************************************************!*\
  !*** ./node_modules/maath/dist/three-87cc244e.cjs.dev.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\n\n/**\n * Helpers for converting buffers to and from Three.js objects\n */\n\n/**\n * Convents passed buffer of passed stride to an array of vectors with the correct length.\n *\n * @param buffer\n * @param stride\n * @returns\n */\nfunction bufferToVectors(buffer) {\n  var stride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  var p = [];\n\n  for (var i = 0, j = 0; i < buffer.length; i += stride, j++) {\n    if (stride === 3) {\n      p[j] = new THREE.Vector3(buffer[i], buffer[i + 1], buffer[i + 2]);\n    } else {\n      p[j] = new THREE.Vector2(buffer[i], buffer[i + 1]);\n    }\n  }\n\n  return p;\n}\n/**\n * Transforms a passed Vector2 or Vector3 array to a points buffer\n *\n * @param vectorArray\n * @returns\n */\n\nfunction vectorsToBuffer(vectorArray) {\n  var l = vectorArray.length;\n  var stride = vectorArray[0].hasOwnProperty(\"z\") ? 3 : 2;\n  var buffer = new Float32Array(l * stride);\n\n  for (var i = 0; i < l; i++) {\n    var j = i * stride;\n    buffer[j] = vectorArray[i].x;\n    buffer[j + 1] = vectorArray[i].y;\n\n    if (stride === 3) {\n      buffer[j + 2] = vectorArray[i].z;\n    }\n  }\n\n  return buffer;\n}\n\nvar three = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  bufferToVectors: bufferToVectors,\n  vectorsToBuffer: vectorsToBuffer\n});\n\nexports.bufferToVectors = bufferToVectors;\nexports.three = three;\nexports.vectorsToBuffer = vectorsToBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC90aHJlZS04N2NjMjQ0ZS5janMuZGV2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyx5REFBTzs7QUFFM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5QixtQkFBbUI7QUFDNUM7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsdUJBQXVCO0FBQ3ZCLGFBQWE7QUFDYix1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW50Y2FyLy4vbm9kZV9tb2R1bGVzL21hYXRoL2Rpc3QvdGhyZWUtODdjYzI0NGUuY2pzLmRldi5qcz8wZWJmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIFRIUkVFID0gcmVxdWlyZSgndGhyZWUnKTtcblxuLyoqXG4gKiBIZWxwZXJzIGZvciBjb252ZXJ0aW5nIGJ1ZmZlcnMgdG8gYW5kIGZyb20gVGhyZWUuanMgb2JqZWN0c1xuICovXG5cbi8qKlxuICogQ29udmVudHMgcGFzc2VkIGJ1ZmZlciBvZiBwYXNzZWQgc3RyaWRlIHRvIGFuIGFycmF5IG9mIHZlY3RvcnMgd2l0aCB0aGUgY29ycmVjdCBsZW5ndGguXG4gKlxuICogQHBhcmFtIGJ1ZmZlclxuICogQHBhcmFtIHN0cmlkZVxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gYnVmZmVyVG9WZWN0b3JzKGJ1ZmZlcikge1xuICB2YXIgc3RyaWRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAzO1xuICB2YXIgcCA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwLCBqID0gMDsgaSA8IGJ1ZmZlci5sZW5ndGg7IGkgKz0gc3RyaWRlLCBqKyspIHtcbiAgICBpZiAoc3RyaWRlID09PSAzKSB7XG4gICAgICBwW2pdID0gbmV3IFRIUkVFLlZlY3RvcjMoYnVmZmVyW2ldLCBidWZmZXJbaSArIDFdLCBidWZmZXJbaSArIDJdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcFtqXSA9IG5ldyBUSFJFRS5WZWN0b3IyKGJ1ZmZlcltpXSwgYnVmZmVyW2kgKyAxXSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHA7XG59XG4vKipcbiAqIFRyYW5zZm9ybXMgYSBwYXNzZWQgVmVjdG9yMiBvciBWZWN0b3IzIGFycmF5IHRvIGEgcG9pbnRzIGJ1ZmZlclxuICpcbiAqIEBwYXJhbSB2ZWN0b3JBcnJheVxuICogQHJldHVybnNcbiAqL1xuXG5mdW5jdGlvbiB2ZWN0b3JzVG9CdWZmZXIodmVjdG9yQXJyYXkpIHtcbiAgdmFyIGwgPSB2ZWN0b3JBcnJheS5sZW5ndGg7XG4gIHZhciBzdHJpZGUgPSB2ZWN0b3JBcnJheVswXS5oYXNPd25Qcm9wZXJ0eShcInpcIikgPyAzIDogMjtcbiAgdmFyIGJ1ZmZlciA9IG5ldyBGbG9hdDMyQXJyYXkobCAqIHN0cmlkZSk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsOyBpKyspIHtcbiAgICB2YXIgaiA9IGkgKiBzdHJpZGU7XG4gICAgYnVmZmVyW2pdID0gdmVjdG9yQXJyYXlbaV0ueDtcbiAgICBidWZmZXJbaiArIDFdID0gdmVjdG9yQXJyYXlbaV0ueTtcblxuICAgIGlmIChzdHJpZGUgPT09IDMpIHtcbiAgICAgIGJ1ZmZlcltqICsgMl0gPSB2ZWN0b3JBcnJheVtpXS56O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBidWZmZXI7XG59XG5cbnZhciB0aHJlZSA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBidWZmZXJUb1ZlY3RvcnM6IGJ1ZmZlclRvVmVjdG9ycyxcbiAgdmVjdG9yc1RvQnVmZmVyOiB2ZWN0b3JzVG9CdWZmZXJcbn0pO1xuXG5leHBvcnRzLmJ1ZmZlclRvVmVjdG9ycyA9IGJ1ZmZlclRvVmVjdG9ycztcbmV4cG9ydHMudGhyZWUgPSB0aHJlZTtcbmV4cG9ydHMudmVjdG9yc1RvQnVmZmVyID0gdmVjdG9yc1RvQnVmZmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/three-87cc244e.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/triangle-33ffdfef.cjs.dev.js":
/*!**************************************************************!*\
  !*** ./node_modules/maath/dist/triangle-33ffdfef.cjs.dev.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct-ddc4ebc1.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-ddc4ebc1.cjs.dev.js\");\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\nvar matrix_dist_maathMatrix = __webpack_require__(/*! ./matrix-fb190f60.cjs.dev.js */ \"(ssr)/./node_modules/maath/dist/matrix-fb190f60.cjs.dev.js\");\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct._isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) isNativeReflectConstruct._setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\n/**\n *\n * @param point\n *\n * @param triangle\n *\n * @returns {boolean} true if the point is in the triangle\n *\n * TODO: Find explainer\n */\nfunction isPointInTriangle(point, triangle) {\n  var _triangle$ = _slicedToArray(triangle[0], 2),\n      ax = _triangle$[0],\n      ay = _triangle$[1];\n\n  var _triangle$2 = _slicedToArray(triangle[1], 2),\n      bx = _triangle$2[0],\n      by = _triangle$2[1];\n\n  var _triangle$3 = _slicedToArray(triangle[2], 2),\n      cx = _triangle$3[0],\n      cy = _triangle$3[1];\n\n  var _point = _slicedToArray(point, 2),\n      px = _point[0],\n      py = _point[1]; // TODO Sub with static calc\n\n\n  var matrix = new THREE.Matrix4(); // prettier-ignore\n\n  matrix.set(ax, ay, ax * ax + ay * ay, 1, bx, by, bx * bx + by * by, 1, cx, cy, cx * cx + cy * cy, 1, px, py, px * px + py * py, 1);\n  return matrix.determinant() <= 0;\n}\nfunction triangleDeterminant(triangle) {\n  var _triangle$4 = _slicedToArray(triangle[0], 2),\n      x1 = _triangle$4[0],\n      y1 = _triangle$4[1];\n\n  var _triangle$5 = _slicedToArray(triangle[1], 2),\n      x2 = _triangle$5[0],\n      y2 = _triangle$5[1];\n\n  var _triangle$6 = _slicedToArray(triangle[2], 2),\n      x3 = _triangle$6[0],\n      y3 = _triangle$6[1]; // prettier-ignore\n\n\n  return matrix_dist_maathMatrix.determinant3(x1, y1, 1, x2, y2, 1, x3, y3, 1);\n}\n/**\n * Uses triangle area determinant to check if 3 points are collinear.\n * If they are, they can't make a triangle, so the determinant will be 0!\n *\n *      0     1     2\n * ─────■─────■─────■\n *\n *\n * Fun fact, you can use this same determinant to check the order of the points in the triangle\n *\n * NOTE: Should this use a buffer instead? NOTE: Should this use a buffer instead? [x0, y0, x1, y1, x2, y2]?\n *\n */\n\nfunction arePointsCollinear(points) {\n  return triangleDeterminant(points) === 0;\n} // TODO This is the same principle as the prev function, find a way to make it have sense\n\nfunction isTriangleClockwise(triangle) {\n  return triangleDeterminant(triangle) < 0;\n}\n/**\n \nThe circumcircle is a circle touching all the vertices of a triangle or polygon.\n\n             ┌───┐             \n             │ B │             \n             └───┘             \n           .───●───.           \n        ,─'   ╱ ╲   '─.        \n      ,'     ╱   ╲     `.      \n     ╱      ╱     ╲      ╲     \n    ;      ╱       ╲      :    \n    │     ╱         ╲     │    \n    │    ╱           ╲    │    \n    :   ╱             ╲   ;    \n     ╲ ╱               ╲ ╱     \n┌───┐ ●─────────────────● ┌───┐\n│ A │  `.             ,'  │ C │\n└───┘    '─.       ,─'    └───┘\n            `─────'                         \n */\n\n/**\n *\n * @param triangle\n *\n * @returns {number} circumcircle\n */\n// https://math.stackexchange.com/a/1460096\n\nfunction getCircumcircle(triangle) {\n  // TS-TODO the next few lines are ignored because the types aren't current to the change in vectors (that can now be iterated)\n  // @ts-ignore\n  var _triangle$7 = _slicedToArray(triangle[0], 2),\n      ax = _triangle$7[0],\n      ay = _triangle$7[1]; // @ts-ignore\n\n\n  var _triangle$8 = _slicedToArray(triangle[1], 2),\n      bx = _triangle$8[0],\n      by = _triangle$8[1]; // @ts-ignore\n\n\n  var _triangle$9 = _slicedToArray(triangle[2], 2),\n      cx = _triangle$9[0],\n      cy = _triangle$9[1];\n\n  if (arePointsCollinear(triangle)) return null; // points are collinear\n\n  var m = new THREE.Matrix4(); // prettier-ignore\n\n  m.set(1, 1, 1, 1, ax * ax + ay * ay, ax, ay, 1, bx * bx + by * by, bx, by, 1, cx * cx + cy * cy, cx, cy, 1);\n  var m11 = matrix_dist_maathMatrix.getMinor(m, 1, 1);\n  var m13 = matrix_dist_maathMatrix.getMinor(m, 1, 3);\n  var m12 = matrix_dist_maathMatrix.getMinor(m, 1, 2);\n  var m14 = matrix_dist_maathMatrix.getMinor(m, 1, 4);\n  var x0 = 0.5 * (m12 / m11);\n  var y0 = 0.5 * (m13 / m11);\n  var r2 = x0 * x0 + y0 * y0 + m14 / m11;\n  return {\n    x: Math.abs(x0) === 0 ? 0 : x0,\n    y: Math.abs(y0) === 0 ? 0 : -y0,\n    r: Math.sqrt(r2)\n  };\n} // https://stackoverflow.com/questions/39984709/how-can-i-check-wether-a-point-is-inside-the-circumcircle-of-3-points\n\nfunction isPointInCircumcircle(point, triangle) {\n  var _ref = Array.isArray(triangle[0]) ? triangle[0] : triangle[0].toArray(),\n      _ref2 = _slicedToArray(_ref, 2),\n      ax = _ref2[0],\n      ay = _ref2[1];\n\n  var _ref3 = Array.isArray(triangle[1]) ? triangle[1] : triangle[1].toArray(),\n      _ref4 = _slicedToArray(_ref3, 2),\n      bx = _ref4[0],\n      by = _ref4[1];\n\n  var _ref5 = Array.isArray(triangle[2]) ? triangle[2] : triangle[2].toArray(),\n      _ref6 = _slicedToArray(_ref5, 2),\n      cx = _ref6[0],\n      cy = _ref6[1];\n\n  var _point2 = _slicedToArray(point, 2),\n      px = _point2[0],\n      py = _point2[1];\n\n  if (arePointsCollinear(triangle)) throw new Error(\"Collinear points don't form a triangle\");\n  /**\n          | ax-px, ay-py, (ax-px)² + (ay-py)² |\n    det = | bx-px, by-py, (bx-px)² + (by-py)² |\n          | cx-px, cy-py, (cx-px)² + (cy-py)² |\n  */\n\n  var x1mpx = ax - px;\n  var aympy = ay - py;\n  var bxmpx = bx - px;\n  var bympy = by - py;\n  var cxmpx = cx - px;\n  var cympy = cy - py; // prettier-ignore\n\n  var d = matrix_dist_maathMatrix.determinant3(x1mpx, aympy, x1mpx * x1mpx + aympy * aympy, bxmpx, bympy, bxmpx * bxmpx + bympy * bympy, cxmpx, cympy, cxmpx * cxmpx + cympy * cympy); // if d is 0, the point is on C\n\n  if (d === 0) {\n    return true;\n  }\n\n  return !isTriangleClockwise(triangle) ? d > 0 : d < 0;\n} // From https://algorithmtutor.com/Computational-Geometry/Determining-if-two-consecutive-segments-turn-left-or-right/\n\nvar mv1 = new THREE.Vector2();\nvar mv2 = new THREE.Vector2();\n/**\n \n     ╱      ╲     \n    ╱        ╲    \n   ▕          ▏   \n                  \n right      left  \n\n * NOTE: Should this use a buffer instead? [x0, y0, x1, y1]?\n */\n\nfunction doThreePointsMakeARight(points) {\n  var _points$map = points.map(function (p) {\n    if (Array.isArray(p)) {\n      return _construct(THREE.Vector2, _toConsumableArray(p));\n    }\n\n    return p;\n  }),\n      _points$map2 = _slicedToArray(_points$map, 3),\n      p1 = _points$map2[0],\n      p2 = _points$map2[1],\n      p3 = _points$map2[2];\n\n  if (arePointsCollinear(points)) return false; // @ts-ignore\n\n  var p2p1 = mv1.subVectors(p2, p1); // @ts-ignore\n\n  var p3p1 = mv2.subVectors(p3, p1);\n  var cross = p3p1.cross(p2p1);\n  return cross > 0;\n}\n\nvar triangle = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isPointInTriangle: isPointInTriangle,\n  triangleDeterminant: triangleDeterminant,\n  arePointsCollinear: arePointsCollinear,\n  isTriangleClockwise: isTriangleClockwise,\n  getCircumcircle: getCircumcircle,\n  isPointInCircumcircle: isPointInCircumcircle,\n  doThreePointsMakeARight: doThreePointsMakeARight\n});\n\nexports._slicedToArray = _slicedToArray;\nexports._toConsumableArray = _toConsumableArray;\nexports.arePointsCollinear = arePointsCollinear;\nexports.doThreePointsMakeARight = doThreePointsMakeARight;\nexports.getCircumcircle = getCircumcircle;\nexports.isPointInCircumcircle = isPointInCircumcircle;\nexports.isPointInTriangle = isPointInTriangle;\nexports.isTriangleClockwise = isTriangleClockwise;\nexports.triangle = triangle;\nexports.triangleDeterminant = triangleDeterminant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/triangle-33ffdfef.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/vector2-f44fd63e.cjs.dev.js":
/*!*************************************************************!*\
  !*** ./node_modules/maath/dist/vector2-f44fd63e.cjs.dev.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\n/**\n *\n */\nfunction zero() {\n  return [0, 0];\n}\nfunction one() {\n  return [1, 1];\n}\nfunction add(a, b) {\n  return [a[0] + b[0], a[1] + b[1]];\n}\nfunction addValue(a, n) {\n  return [a[0] + n, a[1] + n];\n}\nfunction sub(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n}\nfunction subValue(a, n) {\n  return [a[0] - n, a[1] - n];\n}\nfunction scale(a, n) {\n  return [a[0] * n, a[1] * n];\n}\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Calculate the squared length of a vector.\n * Use this when comparing two vectors instead of length, as it's more efficient (no sqrt)\n */\n\nfunction lengthSqr(a) {\n  return a[0] * a[0] + a[1] * a[1];\n}\n/**\n * Calculate the length of a vector.\n * If you only need to compare lenghts, consider using the more efficient lengthSqr\n */\n\nfunction length(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1]);\n}\nfunction distance(a, b) {\n  return Math.sqrt((a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]));\n}\n\nvar vector2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  zero: zero,\n  one: one,\n  add: add,\n  addValue: addValue,\n  sub: sub,\n  subValue: subValue,\n  scale: scale,\n  dot: dot,\n  lengthSqr: lengthSqr,\n  length: length,\n  distance: distance\n});\n\nexports.add = add;\nexports.addValue = addValue;\nexports.distance = distance;\nexports.dot = dot;\nexports.length = length;\nexports.lengthSqr = lengthSqr;\nexports.one = one;\nexports.scale = scale;\nexports.sub = sub;\nexports.subValue = subValue;\nexports.vector2 = vector2;\nexports.zero = zero;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC92ZWN0b3IyLWY0NGZkNjNlLmNqcy5kZXYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxXQUFXO0FBQ1gsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQixXQUFXO0FBQ1gsY0FBYztBQUNkLGlCQUFpQjtBQUNqQixXQUFXO0FBQ1gsYUFBYTtBQUNiLFdBQVc7QUFDWCxnQkFBZ0I7QUFDaEIsZUFBZTtBQUNmLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW50Y2FyLy4vbm9kZV9tb2R1bGVzL21hYXRoL2Rpc3QvdmVjdG9yMi1mNDRmZDYzZS5janMuZGV2LmpzP2ZiYjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqXG4gKi9cbmZ1bmN0aW9uIHplcm8oKSB7XG4gIHJldHVybiBbMCwgMF07XG59XG5mdW5jdGlvbiBvbmUoKSB7XG4gIHJldHVybiBbMSwgMV07XG59XG5mdW5jdGlvbiBhZGQoYSwgYikge1xuICByZXR1cm4gW2FbMF0gKyBiWzBdLCBhWzFdICsgYlsxXV07XG59XG5mdW5jdGlvbiBhZGRWYWx1ZShhLCBuKSB7XG4gIHJldHVybiBbYVswXSArIG4sIGFbMV0gKyBuXTtcbn1cbmZ1bmN0aW9uIHN1YihhLCBiKSB7XG4gIHJldHVybiBbYVswXSAtIGJbMF0sIGFbMV0gLSBiWzFdXTtcbn1cbmZ1bmN0aW9uIHN1YlZhbHVlKGEsIG4pIHtcbiAgcmV0dXJuIFthWzBdIC0gbiwgYVsxXSAtIG5dO1xufVxuZnVuY3Rpb24gc2NhbGUoYSwgbikge1xuICByZXR1cm4gW2FbMF0gKiBuLCBhWzFdICogbl07XG59XG5mdW5jdGlvbiBkb3QoYSwgYikge1xuICByZXR1cm4gYVswXSAqIGJbMF0gKyBhWzFdICogYlsxXTtcbn1cbi8qKlxuICogQ2FsY3VsYXRlIHRoZSBzcXVhcmVkIGxlbmd0aCBvZiBhIHZlY3Rvci5cbiAqIFVzZSB0aGlzIHdoZW4gY29tcGFyaW5nIHR3byB2ZWN0b3JzIGluc3RlYWQgb2YgbGVuZ3RoLCBhcyBpdCdzIG1vcmUgZWZmaWNpZW50IChubyBzcXJ0KVxuICovXG5cbmZ1bmN0aW9uIGxlbmd0aFNxcihhKSB7XG4gIHJldHVybiBhWzBdICogYVswXSArIGFbMV0gKiBhWzFdO1xufVxuLyoqXG4gKiBDYWxjdWxhdGUgdGhlIGxlbmd0aCBvZiBhIHZlY3Rvci5cbiAqIElmIHlvdSBvbmx5IG5lZWQgdG8gY29tcGFyZSBsZW5naHRzLCBjb25zaWRlciB1c2luZyB0aGUgbW9yZSBlZmZpY2llbnQgbGVuZ3RoU3FyXG4gKi9cblxuZnVuY3Rpb24gbGVuZ3RoKGEpIHtcbiAgcmV0dXJuIE1hdGguc3FydChhWzBdICogYVswXSArIGFbMV0gKiBhWzFdKTtcbn1cbmZ1bmN0aW9uIGRpc3RhbmNlKGEsIGIpIHtcbiAgcmV0dXJuIE1hdGguc3FydCgoYVswXSAtIGJbMF0pICogKGFbMF0gLSBiWzBdKSArIChhWzFdIC0gYlsxXSkgKiAoYVsxXSAtIGJbMV0pKTtcbn1cblxudmFyIHZlY3RvcjIgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIF9fcHJvdG9fXzogbnVsbCxcbiAgemVybzogemVybyxcbiAgb25lOiBvbmUsXG4gIGFkZDogYWRkLFxuICBhZGRWYWx1ZTogYWRkVmFsdWUsXG4gIHN1Yjogc3ViLFxuICBzdWJWYWx1ZTogc3ViVmFsdWUsXG4gIHNjYWxlOiBzY2FsZSxcbiAgZG90OiBkb3QsXG4gIGxlbmd0aFNxcjogbGVuZ3RoU3FyLFxuICBsZW5ndGg6IGxlbmd0aCxcbiAgZGlzdGFuY2U6IGRpc3RhbmNlXG59KTtcblxuZXhwb3J0cy5hZGQgPSBhZGQ7XG5leHBvcnRzLmFkZFZhbHVlID0gYWRkVmFsdWU7XG5leHBvcnRzLmRpc3RhbmNlID0gZGlzdGFuY2U7XG5leHBvcnRzLmRvdCA9IGRvdDtcbmV4cG9ydHMubGVuZ3RoID0gbGVuZ3RoO1xuZXhwb3J0cy5sZW5ndGhTcXIgPSBsZW5ndGhTcXI7XG5leHBvcnRzLm9uZSA9IG9uZTtcbmV4cG9ydHMuc2NhbGUgPSBzY2FsZTtcbmV4cG9ydHMuc3ViID0gc3ViO1xuZXhwb3J0cy5zdWJWYWx1ZSA9IHN1YlZhbHVlO1xuZXhwb3J0cy52ZWN0b3IyID0gdmVjdG9yMjtcbmV4cG9ydHMuemVybyA9IHplcm87XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/vector2-f44fd63e.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/vector3-5e723d1a.cjs.dev.js":
/*!*************************************************************!*\
  !*** ./node_modules/maath/dist/vector3-5e723d1a.cjs.dev.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\n/**\n *\n */\nfunction zero() {\n  return [0, 0, 0];\n}\nfunction one() {\n  return [1, 1, 1];\n}\nfunction add(a, b) {\n  return [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\n}\nfunction addValue(a, n) {\n  return [a[0] + n, a[1] + n, a[2] + n];\n}\nfunction sub(a, b) {\n  return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\n}\nfunction subValue(a, n) {\n  return [a[0] - n, a[1] - n, a[2] - n];\n}\nfunction scale(a, n) {\n  return [a[0] * n, a[1] * n, a[2] * n];\n}\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nfunction cross(a, b) {\n  var x = a[1] * b[2] - a[2] * b[1];\n  var y = a[2] * b[0] - a[0] * b[2];\n  var z = a[0] * b[1] - a[1] * b[0];\n  return [x, y, z];\n}\n/**\n * Calculate the squared length of a vector.\n * Use this when comparing two vectors instead of length, as it's more efficient (no sqrt)\n */\n\nfunction lengthSqr(a) {\n  return a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n}\n/**\n * Calculate the length of a vector.\n * If you only need to compare lenghts, consider using the more efficient lengthSqr\n */\n\nfunction length(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n}\nfunction distance(a, b) {\n  return Math.sqrt((a[0] - b[0]) * (a[0] - b[0]) + (a[1] - b[1]) * (a[1] - b[1]) + (a[2] - b[2]) * (a[2] - b[2]));\n}\n\nvar vector3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  zero: zero,\n  one: one,\n  add: add,\n  addValue: addValue,\n  sub: sub,\n  subValue: subValue,\n  scale: scale,\n  dot: dot,\n  cross: cross,\n  lengthSqr: lengthSqr,\n  length: length,\n  distance: distance\n});\n\nexports.add = add;\nexports.addValue = addValue;\nexports.cross = cross;\nexports.distance = distance;\nexports.dot = dot;\nexports.length = length;\nexports.lengthSqr = lengthSqr;\nexports.one = one;\nexports.scale = scale;\nexports.sub = sub;\nexports.subValue = subValue;\nexports.vector3 = vector3;\nexports.zero = zero;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC92ZWN0b3IzLTVlNzIzZDFhLmNqcy5kZXYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELFdBQVc7QUFDWCxnQkFBZ0I7QUFDaEIsYUFBYTtBQUNiLGdCQUFnQjtBQUNoQixXQUFXO0FBQ1gsY0FBYztBQUNkLGlCQUFpQjtBQUNqQixXQUFXO0FBQ1gsYUFBYTtBQUNiLFdBQVc7QUFDWCxnQkFBZ0I7QUFDaEIsZUFBZTtBQUNmLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZW50Y2FyLy4vbm9kZV9tb2R1bGVzL21hYXRoL2Rpc3QvdmVjdG9yMy01ZTcyM2QxYS5janMuZGV2LmpzPzNlZjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqXG4gKi9cbmZ1bmN0aW9uIHplcm8oKSB7XG4gIHJldHVybiBbMCwgMCwgMF07XG59XG5mdW5jdGlvbiBvbmUoKSB7XG4gIHJldHVybiBbMSwgMSwgMV07XG59XG5mdW5jdGlvbiBhZGQoYSwgYikge1xuICByZXR1cm4gW2FbMF0gKyBiWzBdLCBhWzFdICsgYlsxXSwgYVsyXSArIGJbMl1dO1xufVxuZnVuY3Rpb24gYWRkVmFsdWUoYSwgbikge1xuICByZXR1cm4gW2FbMF0gKyBuLCBhWzFdICsgbiwgYVsyXSArIG5dO1xufVxuZnVuY3Rpb24gc3ViKGEsIGIpIHtcbiAgcmV0dXJuIFthWzBdIC0gYlswXSwgYVsxXSAtIGJbMV0sIGFbMl0gLSBiWzJdXTtcbn1cbmZ1bmN0aW9uIHN1YlZhbHVlKGEsIG4pIHtcbiAgcmV0dXJuIFthWzBdIC0gbiwgYVsxXSAtIG4sIGFbMl0gLSBuXTtcbn1cbmZ1bmN0aW9uIHNjYWxlKGEsIG4pIHtcbiAgcmV0dXJuIFthWzBdICogbiwgYVsxXSAqIG4sIGFbMl0gKiBuXTtcbn1cbmZ1bmN0aW9uIGRvdChhLCBiKSB7XG4gIHJldHVybiBhWzBdICogYlswXSArIGFbMV0gKiBiWzFdICsgYVsyXSAqIGJbMl07XG59XG5mdW5jdGlvbiBjcm9zcyhhLCBiKSB7XG4gIHZhciB4ID0gYVsxXSAqIGJbMl0gLSBhWzJdICogYlsxXTtcbiAgdmFyIHkgPSBhWzJdICogYlswXSAtIGFbMF0gKiBiWzJdO1xuICB2YXIgeiA9IGFbMF0gKiBiWzFdIC0gYVsxXSAqIGJbMF07XG4gIHJldHVybiBbeCwgeSwgel07XG59XG4vKipcbiAqIENhbGN1bGF0ZSB0aGUgc3F1YXJlZCBsZW5ndGggb2YgYSB2ZWN0b3IuXG4gKiBVc2UgdGhpcyB3aGVuIGNvbXBhcmluZyB0d28gdmVjdG9ycyBpbnN0ZWFkIG9mIGxlbmd0aCwgYXMgaXQncyBtb3JlIGVmZmljaWVudCAobm8gc3FydClcbiAqL1xuXG5mdW5jdGlvbiBsZW5ndGhTcXIoYSkge1xuICByZXR1cm4gYVswXSAqIGFbMF0gKyBhWzFdICogYVsxXSArIGFbMl0gKiBhWzJdO1xufVxuLyoqXG4gKiBDYWxjdWxhdGUgdGhlIGxlbmd0aCBvZiBhIHZlY3Rvci5cbiAqIElmIHlvdSBvbmx5IG5lZWQgdG8gY29tcGFyZSBsZW5naHRzLCBjb25zaWRlciB1c2luZyB0aGUgbW9yZSBlZmZpY2llbnQgbGVuZ3RoU3FyXG4gKi9cblxuZnVuY3Rpb24gbGVuZ3RoKGEpIHtcbiAgcmV0dXJuIE1hdGguc3FydChhWzBdICogYVswXSArIGFbMV0gKiBhWzFdICsgYVsyXSAqIGFbMl0pO1xufVxuZnVuY3Rpb24gZGlzdGFuY2UoYSwgYikge1xuICByZXR1cm4gTWF0aC5zcXJ0KChhWzBdIC0gYlswXSkgKiAoYVswXSAtIGJbMF0pICsgKGFbMV0gLSBiWzFdKSAqIChhWzFdIC0gYlsxXSkgKyAoYVsyXSAtIGJbMl0pICogKGFbMl0gLSBiWzJdKSk7XG59XG5cbnZhciB2ZWN0b3IzID0gLyojX19QVVJFX18qL09iamVjdC5mcmVlemUoe1xuICBfX3Byb3RvX186IG51bGwsXG4gIHplcm86IHplcm8sXG4gIG9uZTogb25lLFxuICBhZGQ6IGFkZCxcbiAgYWRkVmFsdWU6IGFkZFZhbHVlLFxuICBzdWI6IHN1YixcbiAgc3ViVmFsdWU6IHN1YlZhbHVlLFxuICBzY2FsZTogc2NhbGUsXG4gIGRvdDogZG90LFxuICBjcm9zczogY3Jvc3MsXG4gIGxlbmd0aFNxcjogbGVuZ3RoU3FyLFxuICBsZW5ndGg6IGxlbmd0aCxcbiAgZGlzdGFuY2U6IGRpc3RhbmNlXG59KTtcblxuZXhwb3J0cy5hZGQgPSBhZGQ7XG5leHBvcnRzLmFkZFZhbHVlID0gYWRkVmFsdWU7XG5leHBvcnRzLmNyb3NzID0gY3Jvc3M7XG5leHBvcnRzLmRpc3RhbmNlID0gZGlzdGFuY2U7XG5leHBvcnRzLmRvdCA9IGRvdDtcbmV4cG9ydHMubGVuZ3RoID0gbGVuZ3RoO1xuZXhwb3J0cy5sZW5ndGhTcXIgPSBsZW5ndGhTcXI7XG5leHBvcnRzLm9uZSA9IG9uZTtcbmV4cG9ydHMuc2NhbGUgPSBzY2FsZTtcbmV4cG9ydHMuc3ViID0gc3ViO1xuZXhwb3J0cy5zdWJWYWx1ZSA9IHN1YlZhbHVlO1xuZXhwb3J0cy52ZWN0b3IzID0gdmVjdG9yMztcbmV4cG9ydHMuemVybyA9IHplcm87XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/vector3-5e723d1a.cjs.dev.js\n");

/***/ })

};
;